{"entities":[{"fqn":"/retail/derived_attributes","id":"abce6f0a-384b-11ef-8d8b-63ef4c357348","folder_id":"abc98cc4-384b-11ef-8d8b-63ef4c357348","name":"derived_attributes","entity_type":"folder","entity_version":"yuejdx2WRvwKW+oWUZvn3t+tBPch+AlttiMAQqrWNc0=","data":{"folder_type":"REGULAR","copied_from_id":null}},{"fqn":"/retail/base","id":"abcbafbe-384b-11ef-8d8b-63ef4c357348","folder_id":"abc98cc4-384b-11ef-8d8b-63ef4c357348","name":"base","entity_type":"folder","entity_version":"yuejdx2WRvwKW+oWUZvn3t+tBPch+AlttiMAQqrWNc0=","data":{"folder_type":"REGULAR","copied_from_id":null}},{"fqn":"/retail/mart/business_unit_dimension","id":"abc9dae6-384b-11ef-8d8b-63ef4c357348","folder_id":"abc9b3d5-384b-11ef-8d8b-63ef4c357348","name":"business_unit_dimension","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"#+import \"coginiti.co/foundation/retail/base/location\"\n#+import \"coginiti.co/foundation/retail/base/touchpoint\"\n\n#+src sql BusinessUnitDimension()\n#+meta {\n  :doc `This dimension stores the \"INTERACTION LOCATION\", representing a location with which customers can interact\n        such as a brick and mortal store, web site, call center, or mobile app. As well, the \"STORE\" hierarchy is de-normalized.`,\n  :publication {\n    :type \"table\",\n    :name \"business_unit_dimension\",\n    :schema \"mart\"\n  }\n}\n#+begin\n  SELECT\n    s.store_key AS business_unit_key,\n    s.business_unit_id,\n    s.business_unit_name,\n    s.size_unit_of_measure_code,\n    s.open_date,\n    s.closing_date,\n    s.selling_area_size,\n    s.size,\n    s.last_remodel_date,\n    s.site_postal_address_key AS postal_address_key,\n    e.email_address,\n    pn.complete_number AS complete_phone_number,\n    mr.market_region_id,\n    mr.market_region_name,\n    ma.market_area_id,\n    ma.market_area_name,\n    d.district_id,\n    d.district_name,\n    sg.store_group_id,\n    sg.store_group_name\n  FROM\n    {{ location.Store() }} s\n  INNER JOIN {{ touchpoint.EmailAddress() }} e\n    ON e.email_address_key = s.email_address_key\n  INNER JOIN {{ touchpoint.PhoneNumber() }} pn\n    ON pn.phone_number_key = s.phone_number_key\n  INNER JOIN {{ location.StoreGroup() }} sg\n    ON sg.store_group_key = s.store_group_key\n  INNER JOIN {{ location.District() }} d\n    ON d.district_key = sg.district_key\n  INNER JOIN {{ location.MarketArea() }} ma\n    ON ma.market_area_key = d.market_area_key\n  INNER JOIN {{ location.MarketRegion() }} mr\n    ON mr.market_region_key = ma.market_region_key\n#+end\n","platform":null}},{"fqn":"/retail/landing/date_calendar","id":"abcdf9d3-384b-11ef-8d8b-63ef4c357348","folder_id":"abcdd2bf-384b-11ef-8d8b-63ef4c357348","name":"date_calendar","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"\n#+src sql Date()\n#+meta {\n  :doc \"Source data for the calendar. The fiscal attributes is generated by adding a 3 month offset\",\n  :publication {\n    :type \"table\",\n    :name \"date_calendar\",\n    :schema \"landing\"\n  }\n}\n#+begin\n  SELECT \n    d::DATE AS business_day_date,\n    EXTRACT(YEAR FROM d)::INTEGER AS calendar_year,\n    EXTRACT(QUARTER FROM d)::INTEGER AS calendar_quarter,\n    EXTRACT(MONTH FROM d)::INTEGER AS calendar_month,\n    EXTRACT(WEEK FROM d)::INTEGER AS calendar_week,\n    EXTRACT(DOW FROM d)::INTEGER AS calendar_week_day,\n    CASE \n        WHEN d IN (\n            '2020-01-01', '2020-07-04', '2020-12-25',\n            '2021-01-01', '2021-07-04', '2021-12-25',\n            '2022-01-01', '2022-07-04', '2022-12-25' \n        ) THEN true ELSE false\n    END AS CALENDAR_HOLIDAY_FLAG,\n    EXTRACT(YEAR FROM d + '3 months'::INTERVAL)::INTEGER AS fiscal_year,\n    EXTRACT(QUARTER FROM d + '3 months'::INTERVAL)::INTEGER AS fiscal_quarter,\n    MOD(EXTRACT(MONTH FROM d + '3 months'::INTERVAL)::INTEGER + 3, 12) + 1 AS fiscal_period,\n    EXTRACT(WEEK FROM d + '3 months'::INTERVAL)::INTEGER AS fiscal_week,\n    EXTRACT(DOW FROM d + '3 months'::INTERVAL)::INTEGER AS fiscal_week_day,\n    CASE\n        WHEN d IN (\n            '2020-01-01', '2020-07-04', '2020-12-25',\n            '2021-01-01', '2021-07-04', '2021-12-25',\n            '2022-01-01', '2022-07-04', '2022-12-25' \n        ) THEN true ELSE false\n    END::BOOLEAN AS fiscal_holiday_flag\n  FROM\n    {{ DateSeries(\"2020-01-01\", 5000) }}\n  ;\n#+end\n\n","platform":null}},{"fqn":"/retail/mart/fact_sale_return","id":"abca2909-384b-11ef-8d8b-63ef4c357348","folder_id":"abc9b3d5-384b-11ef-8d8b-63ef4c357348","name":"fact_sale_return","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"#+import \"coginiti.co/foundation/retail/base/sales\"\n#+import \"coginiti.co/foundation/retail/base/location\"\n\n#+src sql FactSalesReturn()\n#+meta {\n  :doc \"This is a transaction / item level fact table which should consist of completely additive measures pertaining to sales and returns.\",\n  :publication {\n    :type \"table\",\n    :name \"sale_return_fact\",\n    :schema \"mart\"\n  }\n}\n#+begin\n  SELECT\n    sh.transaction_id,\n    sh.transaction_datetime,\n    sh.transaction_date_key,\n    sd.product_key AS item_key,\n    sh.location_key AS business_unit_key,\n    sh.persona_key,\n    s.site_postal_address_key AS postal_address_key,\n    s.inbound_channel_key,\n    sd.unit_quantity AS sales_quantity,\n    sd.unit_price_amount AS gross_sales_amount\n  FROM\n    {{ sales.SalesDetail() }} AS sd\n  INNER JOIN {{ sales.SalesHeader() }} AS sh\n    ON sh.sales_header_key = sd.sales_header_key\n  INNER JOIN {{ location.Store() }} AS s\n    ON s.store_key = sh.location_key\n#+end","platform":null}},{"fqn":"/retail/base/touchpoint/phone_number","id":"abcce84e-384b-11ef-8d8b-63ef4c357348","folder_id":"abccc13d-384b-11ef-8d8b-63ef4c357348","name":"phone_number","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"#+import \"coginiti.co/foundation/retail/base\"\n#+import \"coginiti.co/foundation/retail/sources\"\n\n#+src sql PhoneNumber()\n#+meta {\n  :doc \"A dimensional type representing an actual complete phone number, including country code and area code.\",\n  :publication {\n    :type \"table\",\n    :name \"dim_phone_number\",\n    :schema \"base\",\n    :primary_key [\"phone_number_key\"],\n  }\n}\n#+begin\n  SELECT\n    {{ base.SurrogateKey(\"_t.natural_key\") }} AS phone_number_key,\n    _t.phone_number AS complete_number,\n    {{ base.SurrogateKey(\"_t.country_nk\") }} AS country_key,\n    FALSE AS mobile_flag,\n    b.system_timestamp AS start_datetime,\n    b.batch_number AS batch_number\n  FROM (\n    SELECT\n      phone_number_nk AS natural_key,\n      phone_number,\n      country_nk,\n      ROW_NUMBER() OVER (PARTITION BY phone_number ORDER BY phone_number DESC, row_hash) AS row_num\n    FROM\n      {{ sources.Customers() }}\n\n    UNION ALL\n\n    SELECT\n      phone_number_nk AS natural_key,\n      phone_number,\n      country_nk,\n      ROW_NUMBER() OVER (PARTITION BY phone_number ORDER BY phone_number DESC, row_hash) AS row_num\n    FROM\n      {{ sources.Stores() }}\n  ) _t\n  CROSS JOIN {{ base.Batch() }} b\n  WHERE\n    _t.row_num = 1\n#+end\n","platform":null}},{"fqn":"/retail/landing/customers","id":"abce47f7-384b-11ef-8d8b-63ef4c357348","folder_id":"abcdd2bf-384b-11ef-8d8b-63ef4c357348","name":"customers","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"\n#+src sql Customers()\n#+meta {\n  :publication {\n    :type \"table\",\n    :name \"customers\",\n    :schema \"landing\"\n  }\n}\n#+begin\n  WITH phone_numbers AS (\n    SELECT\n      ROW_NUMBER() OVER() AS sequence_number,\n      *\n    FROM\n      {{ MobilePhoneNumbers(numCustomers) }}\n  ),\n\n  entries AS (\n    SELECT \n      ROW_NUMBER() OVER() AS sequence_number,\n      first_name, \n      last_name,\n      {{ email_address(\"first_name\", \"last_name\") }} AS email\n    FROM\n      {{ fullNames(numCustomers) }}\n  )\n  \n  SELECT\n    c.sequence_number AS id,\n    first_name,\n    last_name,\n    email,\n    concat(\n      substring('abcdefghijklmnopqrstuvwxyz', (random()*26+1)::int, 1), ' ',\n      substring('abcdefghijklmnopqrstuvwxyz', (random()*26+1)::int, 1), ' ',\n      (random()*1000)::int\n    ) AS address_line_1,\n    concat(\n      substring('abcdefghijklmnopqrstuvwxyz', (random()*26+1)::int, 1), ' ',\n      substring('abcdefghijklmnopqrstuvwxyz', (random()*26+1)::int, 1), ' ',\n      (random()*1000)::int\n    ) AS address_line_2,\n    concat(\n      substring('abcdefghijklmnopqrstuvwxyz', (random()*26+1)::int, 1), ' ',\n      substring('abcdefghijklmnopqrstuvwxyz', (random()*26+1)::int, 1)\n    ) AS city,\n    (random()*90000+10000)::CHAR(5) AS postal_code,\n    pn.phone_number\n  FROM\n    entries c\n  INNER JOIN phone_numbers pn\n    ON pn.sequence_number = c.sequence_number\n#+end\n\n#+src sql fullNames(count)\n#+begin\n  SELECT\n    s.id AS row_id,\n    substring('ABCDEFGHIJKLMNOPQRSTUVWXYZ', (s.id%26+1)::integer, 4+(random()*20)::int) AS first_name,\n    substring('ABCDEFGHIJKLMNOPQRSTUVWXYZ', (s.id%26+1)::integer, 1) AS middle_name,\n    substring('ABCDEFGHIJKLMNOPQRSTUVWXYZ', (s.id%26+1)::integer, 4+(random()*20)::int) AS last_name\n  FROM\n    {{ Series(count) }} AS s\n#+end\n\n#+macro email_address(firstname, lastname)\n#+begin\n  LOWER({{ firstname }}) || '_' || LOWER({{ lastname }}) || CAST(RANDOM() * 1000 AS INT) || '@' || (\n    CASE CAST(RANDOM() * 3 AS INT)\n      WHEN 0 THEN 'gmail'\n      WHEN 1 THEN 'hotmail'\n      WHEN 2 THEN 'yahoo'\n      WHEN 3 THEN 'outlook.com'\n    END\n  ) || '.com'\n#+end\n","platform":null}},{"fqn":"/retail/sources/date_calendar","id":"abcb88aa-384b-11ef-8d8b-63ef4c357348","folder_id":"abca501e-384b-11ef-8d8b-63ef4c357348","name":"date_calendar","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"#+src sql DateCalendar()\n#+begin\n  SELECT\n    d.business_day_date,\n    d.calendar_year,\n    d.calendar_quarter,\n    d.calendar_month,\n    d.calendar_week,\n    d.calendar_week_day,\n    d.calendar_holiday_flag,\n    d.fiscal_year,\n    d.fiscal_quarter,\n    d.fiscal_period,\n    d.fiscal_week,\n    d.fiscal_week_day,\n    d.fiscal_holiday_flag,\n    {{ NaturalKey(\"DATE^\", [\"business_day_date\"]) }} AS date_nk\n  FROM\n    landing.date_calendar d\n  ;\n#+end\n","platform":null}},{"fqn":"/retail/base/location/inbound_channel","id":"abcc4c06-384b-11ef-8d8b-63ef4c357348","folder_id":"abcbd6d1-384b-11ef-8d8b-63ef4c357348","name":"inbound_channel","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"#+import \"coginiti.co/foundation/retail/base\"\n#+import \"coginiti.co/foundation/retail/sources\"\n\n#+src sql InboundChannel()\n#+meta {\n  :doc \"Describes the channels by which customers can interact such as store, web, mobile app, call center.\",\n  :publication {\n    :type \"table\",\n    :name \"dim_inbound_channel\",\n    :schema \"base\",\n    :primary_key [\"inbound_channel_key\"],\n  }\n}\n#+begin\n  SELECT\n    {{ base.SurrogateKey(\"_t.natural_key\") }} AS inbound_channel_key,\n    _t.channel_code AS inbound_channel_code,\n    _t.channel_name AS inbound_channel_name, \n    b.system_timestamp AS start_datetime,\n    b.batch_number AS batch_number\n  FROM (\n    SELECT\n      inbound_channel_nk AS natural_key,\n      channel_code,\n      channel_name,\n      ROW_NUMBER() OVER (PARTITION BY inbound_channel_nk ORDER BY inbound_channel_nk DESC, row_hash) AS row_num\n    FROM\n      {{ sources.InboundChannels() }}\n  ) _t\n  CROSS JOIN {{ base.Batch() }} b\n  WHERE\n    _t.row_num = 1\n#+end\n","platform":null}},{"fqn":"/retail/base/location/market_region","id":"abcbfde3-384b-11ef-8d8b-63ef4c357348","folder_id":"abcbd6d1-384b-11ef-8d8b-63ef4c357348","name":"market_region","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"#+import \"std/publication\"\n#+import \"coginiti.co/foundation/retail/sources\"\n#+import \"coginiti.co/foundation/retail/base\"\n\n#+src sql MarketRegion()\n#+meta {\n  :doc \"A dimensional type representing the largest geographical grouping of store locations used for aggregating data.\",\n  :publication {\n    :type \"table\",\n    :name \"dim_market_region\",\n    :schema \"base\",\n    :primary_key [\"market_region_key\"],\n  }\n}\n#+begin\n  SELECT\n    {{ base.SurrogateKey(\"_t.natural_key\") }} AS market_region_key,\n    _t.market_region_code AS market_region_id,\n    _t.market_region AS market_region_name,\n    b.system_timestamp AS start_datetime,\n    b.batch_number AS batch_number\n  FROM (\n    SELECT\n      market_region_nk AS natural_key,\n      market_region_code,\n      market_region,\n      ROW_NUMBER() OVER (PARTITION BY market_region_code ORDER BY market_region_code DESC, row_hash) AS row_num\n    FROM\n      {{ sources.Stores() }}\n  ) _t\n  CROSS JOIN {{ base.Batch() }} b\n  WHERE\n    _t.row_num = 1\n#+end\n","platform":null}},{"fqn":"/retail/base/location","id":"abcbd6d1-384b-11ef-8d8b-63ef4c357348","folder_id":"abcbafbe-384b-11ef-8d8b-63ef4c357348","name":"location","entity_type":"folder","entity_version":"yuejdx2WRvwKW+oWUZvn3t+tBPch+AlttiMAQqrWNc0=","data":{"folder_type":"REGULAR","copied_from_id":null}},{"fqn":"/retail/base/sales/sales_header_test","id":"abcdabab-384b-11ef-8d8b-63ef4c357348","folder_id":"abcd8498-384b-11ef-8d8b-63ef4c357348","name":"sales_header_test","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"#+test sql Test_SalesHeader_NoDuplicatesInTransactionID()\n#+begin\n  SELECT  \n    transaction_id,\n    COUNT(*) AS cnt\n  FROM\n    {{ SalesHeader() }}\n  GROUP BY\n    transaction_id\n  HAVING\n    COUNT(*) > 1\n  ;\n#+end","platform":null}},{"fqn":"/retail/base/touchpoint/email_domain","id":"abcd0f60-384b-11ef-8d8b-63ef4c357348","folder_id":"abccc13d-384b-11ef-8d8b-63ef4c357348","name":"email_domain","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"#+import \"std/publication\"\n#+import \"coginiti.co/foundation/retail/sources\"\n#+import \"coginiti.co/foundation/retail/base\"\n\n#+src sql EmailDomain()\n#+meta {\n  :doc \"The internet domain (e.g. google.com).\",\n  :publication {\n    :type \"table\",\n    :name \"dim_email_domain\",\n    :schema \"base\",\n    :primary_key [\"email_domain_key\"]\n  }\n}\n#+begin\n  WITH source_rows AS (\n    SELECT\n      email_domain_nk AS natural_key,\n      email_domain AS domain,\n      row_hash\n    FROM\n      {{ sources.Customers() }}\n\n    UNION ALL\n\n    SELECT\n      email_domain_nk AS natural_key,\n      email_domain AS domain,\n      row_hash\n    FROM\n      {{ sources.Stores() }}\n  )\n\n  SELECT\n    {{ base.SurrogateKey(\"_t.natural_key\") }} AS email_domain_key,\n    _t.domain,\n    b.system_timestamp AS start_datetime,\n    b.batch_number AS batch_number\n  FROM (\n    SELECT\n      *,\n      ROW_NUMBER() OVER (PARTITION BY natural_key ORDER BY natural_key DESC, row_hash) AS row_num\n    FROM\n      source_rows\n  ) _t\n  CROSS JOIN {{ base.Batch() }} b\n  WHERE\n    _t.row_num = 1\n  ;\n#+end\n","platform":null}},{"fqn":"/retail/sources/inbound_channels","id":"abcb88ab-384b-11ef-8d8b-63ef4c357348","folder_id":"abca501e-384b-11ef-8d8b-63ef4c357348","name":"inbound_channels","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"\n#+src sql InboundChannels()\n#+begin\n  SELECT\n    channel_name,\n    channel_code,\n    {{ NaturalKey(\"IC^\", [\"channel_code\"]) }} AS inbound_channel_nk,\n    {{ RowHash([\n      \"channel_name\",\n      \"channel_code\"\n    ])}} AS row_hash\n  FROM\n    landing.inbound_channels\n  ;\n#+end\n","platform":null}},{"fqn":"/retail/base/utils","id":"abccc13c-384b-11ef-8d8b-63ef4c357348","folder_id":"abcbafbe-384b-11ef-8d8b-63ef4c357348","name":"utils","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"#+import \"std/publication\"\n#+import \"std/time\"\n\n#+macro SurrogateKey(field)\n#+begin\n  MD5(COALESCE({{ field }}::TEXT, ''))::TEXT\n#+end\n\n#+macro SurrogateKeyFromFields(fields)\n#+begin\n  MD5(CONCAT(\n    #+for f : fields separator \",'|', \" do\n      COALESCE({{ f }}::TEXT, '')\n    #+end\n  ))\n#+end\n\n#+src sql Batch()\n#+meta {\n  :doc \"Generate a new batch record.\",\n  :publication {\n    :type \"table\",\n    :name \"batch_\" + time.Format(time.NowUTC(), \"yyyy_MM_dd_HH_mm_ss\"),\n    :schema \"stage\"\n  }\n}\n#+begin\n  SELECT\n    NEXTVAL('base.seq_batch') AS batch_number,\n    CURRENT_TIMESTAMP AS system_timestamp\n  ;\n#+end\n\n#+src sql EndBatch(): void\n#+meta {\n  :doc \"Save batch record into the log table.\"\n}\n#+begin\n  INSERT INTO base.batch_log(\n    batch_number,\n    system_timestamp\n  )\n  SELECT\n    *\n  FROM\n    {{ Batch() }}\n  ;\n\n  DROP TABLE {{ Batch() }};\n#+end\n","platform":null}},{"fqn":"/retail/base/location/store","id":"abcc7318-384b-11ef-8d8b-63ef4c357348","folder_id":"abcbd6d1-384b-11ef-8d8b-63ef4c357348","name":"store","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"#+import \"std/publication\"\n#+import \"coginiti.co/foundation/retail/base\"\n#+import \"coginiti.co/foundation/retail/base/touchpoint\"\n#+import \"coginiti.co/foundation/retail/sources\"\n\n#+src sql Store()\n#+meta {\n  :doc \"A dimensional type representing a physical brick-and-mortar location at which customers can interact.\",\n  :publication {\n    :type \"table\",\n    :name \"dim_store\",\n    :schema \"base\"\n  }\n}\n#+begin\n  SELECT\n    {{ base.SurrogateKey(\"_t.natural_key\") }} AS store_key,\n    {{ base.SurrogateKey(\"_t.inbound_channel_nk\") }} AS inbound_channel_key,\n    store_id AS business_unit_id,\n    store_name AS business_unit_name,\n    {{ base.SurrogateKey(\"_t.postal_address_nk\") }} AS site_postal_address_key,\n    open_date,\n    closing_date,\n    size_unit_of_measure_code,\n    selling_area_size,\n    size,\n    last_remodel_date,\n    {{ base.SurrogateKey(\"_t.email_address_nk\") }} AS email_address_key,\n    {{ base.SurrogateKey(\"_t.phone_number_nk\") }} AS phone_number_key,\n    {{ base.SurrogateKey(\"_t.store_group_nk\") }} AS store_group_key,\n    b.system_timestamp AS start_datetime,\n    b.batch_number AS batch_number\n  FROM (\n    SELECT\n      store_nk AS natural_key,\n      store_id,\n      store_name,\n      open_date,\n      closing_date,\n      size_unit_of_measure_code,\n      selling_area_size,\n      size,\n      last_remodel_date,\n      email_address_nk,\n      phone_number_nk,\n      postal_address_nk,\n      inbound_channel_nk,\n      store_group_nk,\n      ROW_NUMBER() OVER (PARTITION BY store_id ORDER BY store_id DESC, row_hash) AS row_num\n    FROM\n      {{ sources.Stores() }}\n  ) _t\n  CROSS JOIN {{ base.Batch() }} b\n  WHERE\n    _t.row_num = 1\n  ;\n#+end\n","platform":null}},{"fqn":"/retail/base/offering/offering_item","id":"abcc9a2b-384b-11ef-8d8b-63ef4c357348","folder_id":"abcc9a2a-384b-11ef-8d8b-63ef4c357348","name":"offering_item","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"#+import \"std/publication\"\n#+import \"coginiti.co/foundation/retail/base\"\n#+import \"coginiti.co/foundation/retail/sources\"\n\n#+src sql OfferingItem()\n#+meta {\n  :doc \"A dimensional type generally representing the most granular level of the \\\"OFFERING\\\" dimension representing a unique item\n        that can be bought, viewed, downloaded, etc.\",\n  :publication {\n    :type \"table\",\n    :name \"dim_offering_item\",\n    :schema \"base\"\n  }\n}\n#+begin\n  SELECT\n    {{ base.SurrogateKey(\"_t.natural_key\") }} AS offering_item_key,\n    _t.product_id AS item_id,\n    _t.name AS item_name,\n    b.system_timestamp AS start_datetime,\n    b.batch_number AS batch_number\n  FROM (\n    SELECT\n      product_nk AS natural_key,\n      product_id,\n      name AS name,\n      ROW_NUMBER() OVER (PARTITION BY product_id ORDER BY product_id DESC, row_hash) AS row_num\n    FROM\n      {{ sources.Products() }}\n  ) _t\n  CROSS JOIN {{ base.Batch() }} b\n  WHERE\n    _t.row_num = 1\n  ;\n#+end\n","platform":null}},{"fqn":"/retail/base/location/district","id":"abcbd6d2-384b-11ef-8d8b-63ef4c357348","folder_id":"abcbd6d1-384b-11ef-8d8b-63ef4c357348","name":"district","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"#+import \"std/publication\"\n#+import \"coginiti.co/foundation/retail/sources\"\n#+import \"coginiti.co/foundation/retail/base\"\n\n#+src sql District()\n#+meta {\n  :doc \"A dimensional type representing the third level of geographical grouping of stores within a Market Area used for aggregating data.\",\n  :publication {\n    :type \"table\",\n    :name \"dim_district\",\n    :schema \"base\",\n    :primary_key [\"district_key\"],\n  }\n}\n#+begin\n  SELECT\n    {{ base.SurrogateKey(\"_t.natural_key\") }} AS district_key,\n    _t.district_code AS district_id,\n    _t.district AS district_name,\n    {{ base.SurrogateKey(\"_t.market_area_nk\") }} AS market_area_key,\n    b.system_timestamp AS start_datetime,\n    b.batch_number AS batch_number\n  FROM (\n    SELECT\n      district_nk AS natural_key,\n      district_code,\n      district,\n      market_area_nk,\n      ROW_NUMBER() OVER (PARTITION BY district_code ORDER BY district_code DESC, row_hash) AS row_num\n    FROM\n      {{ sources.Stores() }}\n  ) _t\n  CROSS JOIN {{ base.Batch() }} b\n  WHERE\n    _t.row_num = 1\n#+end\n","platform":null}},{"fqn":"/retail/landing/_config","id":"abcdf9d1-384b-11ef-8d8b-63ef4c357348","folder_id":"abcdd2bf-384b-11ef-8d8b-63ef4c357348","name":"_config","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"#+const\n  numStores = 10000;\n  openDateStart = \"2021-01-01\";\n  openDateEnd = \"2022-12-31\";\n  closingDateEnd = \"2023-09-01\";\n  lastRemodelDateEnd = \"2023-09-01\";\n\n  numCustomers = 1000;\n\n  numProducts = 100;\n\n  numSalesTransations = 10000;\n  transactionsStartDate = \"2021-01-01\";\n  transactionsEndDate = \"2023-10-01\";\n#+end\n","platform":null}},{"fqn":"/retail/base/location/market_area","id":"abcbfde4-384b-11ef-8d8b-63ef4c357348","folder_id":"abcbd6d1-384b-11ef-8d8b-63ef4c357348","name":"market_area","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"#+import \"std/publication\"\n#+import \"coginiti.co/foundation/retail/sources\"\n#+import \"coginiti.co/foundation/retail/base\"\n\n#+src sql MarketArea()\n#+meta {\n  :doc \"A dimensional type representing the second level of geographical grouping of stores within a Market Region used for aggregating data.\",\n  :publication {\n    :type \"table\",\n    :name \"dim_market_area\",\n    :schema \"base\",\n    :primary_key [\"market_area_key\"],\n  }\n}\n#+begin\n  SELECT\n    {{ base.SurrogateKey(\"_t.natural_key\") }} AS market_area_key,\n    _t.market_area_code AS market_area_id,\n    _t.market_area AS market_area_name,\n    {{ base.SurrogateKey(\"_t.market_region_nk\") }} AS market_region_key,\n    b.system_timestamp AS start_datetime,\n    b.batch_number AS batch_number\n  FROM (\n    SELECT\n      market_area_nk AS natural_key,\n      market_area_code,\n      market_area,\n      market_region_nk,\n      ROW_NUMBER() OVER (PARTITION BY market_area_code ORDER BY market_area_code DESC, row_hash) AS row_num\n    FROM\n      {{ sources.Stores() }}\n  ) _t\n  CROSS JOIN {{ base.Batch() }} b\n  WHERE\n    _t.row_num = 1\n#+end\n","platform":null}},{"fqn":"/retail/mart/inbound_channel_dimension","id":"abca290a-384b-11ef-8d8b-63ef4c357348","folder_id":"abc9b3d5-384b-11ef-8d8b-63ef4c357348","name":"inbound_channel_dimension","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"#+import \"coginiti.co/foundation/retail/base/location\"\n\n#+src sql InboundChannelDimension()\n#+meta {\n  :doc \"A dimension representing the channel through which interactions may occur. For example store, web, call center, mobile app.\",\n  :publication {\n    :type \"table\",\n    :name \"inbound_channel_dimension\",\n    :schema \"mart\"\n  }\n}\n#+begin\n  SELECT\n    i.inbound_channel_key,\n    i.inbound_channel_code,\n    i.inbound_channel_name\n  FROM\n    {{ location.InboundChannel() }} i\n#+end\n","platform":null}},{"fqn":"/retail/project.toml","id":"abcdd2be-384b-11ef-8d8b-63ef4c357348","folder_id":"abc98cc4-384b-11ef-8d8b-63ef4c357348","name":"project.toml","entity_type":"project_manifest","entity_version":"ch6dey24xG56uNHUpHDUK+LfNnx1lBsa+xdazSfcr4E=","data":{"copied_from_id":null,"asset_type":"PROJECT_MANIFEST","description":"retail description","content":"[general]\nname = 'coginiti.co/foundation/retail'\ndescription = 'Retail Foundation implements data transformation for base and mart layers of the retail model.'\nversion = '1.0.0'"}},{"fqn":"/retail/sources/products_test","id":"abcb6198-384b-11ef-8d8b-63ef4c357348","folder_id":"abca501e-384b-11ef-8d8b-63ef4c357348","name":"products_test","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"#+test sql Test_Products_UniqueID()\n#+meta {\n  :doc `Verifies the uniqueness of the 'product_id' field.`\n}\n#+begin\n  SELECT\n    product_id,\n    COUNT(*) AS cnt\n  FROM\n    {{ Products() }}\n  GROUP BY\n    product_id\n  HAVING\n    COUNT(*) > 1\n  ;\n#+end","platform":null}},{"fqn":"/retail/mart","id":"abc9b3d5-384b-11ef-8d8b-63ef4c357348","folder_id":"abc98cc4-384b-11ef-8d8b-63ef4c357348","name":"mart","entity_type":"folder","entity_version":"yuejdx2WRvwKW+oWUZvn3t+tBPch+AlttiMAQqrWNc0=","data":{"folder_type":"REGULAR","copied_from_id":null}},{"fqn":"/retail/base/touchpoint/email_address_test","id":"abcd8497-384b-11ef-8d8b-63ef4c357348","folder_id":"abccc13d-384b-11ef-8d8b-63ef4c357348","name":"email_address_test","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"\n#+test sql Test_EmailAddress_NoDuplicatesInPK()\n#+begin\n  SELECT  \n    email_address_key,\n    COUNT(*) AS cnt\n  FROM\n    {{ EmailAddress() }}\n  GROUP BY\n    email_address_key\n  HAVING\n    COUNT(*) > 1\n  ;\n#+end","platform":null}},{"fqn":"/retail/landing/country_phone_codes","id":"abcdd2c0-384b-11ef-8d8b-63ef4c357348","folder_id":"abcdd2bf-384b-11ef-8d8b-63ef4c357348","name":"country_phone_codes","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"\n#+src sql CountryPhoneCodes()\n#+meta {\n  :doc \"Returns a mapping between country iso 2 code and mobile phone code.\",\n  :publication {\n    :type \"table\",\n    :name \"country_phone_codes\",\n    :schema \"landing\"\n  }\n}\n#+begin\n  SELECT\n    ROW_NUMBER() OVER (ORDER BY country_name) AS sequence_number,\n    country_codes.* \n  FROM (\n    SELECT 'Singapore' AS country_name, 'SG' AS iso_2_code, '+65' AS phone_number_code, 8 AS phone_number_length\n    UNION ALL\n    SELECT 'Malaysia', 'MY', '+60', 9\n    UNION ALL\n    SELECT 'United States', 'US', '+1', 10\n    UNION ALL\n    SELECT 'Ireland', 'IE', '+353', 10\n    UNION ALL\n    SELECT 'United Kingdom', 'GB', '+44', 10\n    UNION ALL\n    SELECT 'Netherlands', 'NL', '+31', 10\n    UNION ALL\n    SELECT 'Germany', 'DE', '+49', 11\n  ) AS country_codes\n#+end\n\n","platform":null}},{"fqn":"/retail/sources/products","id":"abca9e42-384b-11ef-8d8b-63ef4c357348","folder_id":"abca501e-384b-11ef-8d8b-63ef4c357348","name":"products","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"#+src sql Products()\n#+begin\n  SELECT\n    id AS product_id,\n    name,\n    category_code,\n    category_name,\n    {{ NaturalKey(\"PRD^\", [\"id\"]) }} AS product_nk,\n    {{ RowHash([\n      \"id\",\n      \"name\",\n      \"category_code\",\n      \"category_name\"\n    ]) }} AS row_hash\n  FROM\n    landing.products\n  ;\n#+end\n","platform":null}},{"fqn":"/retail/mart/item_dimension","id":"abca501d-384b-11ef-8d8b-63ef4c357348","folder_id":"abc9b3d5-384b-11ef-8d8b-63ef4c357348","name":"item_dimension","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"#+import \"coginiti.co/foundation/retail/base/offering\"\n\n-- TODO: add offering hierarchy\n#+src sql ItemDimension()\n#+meta {\n  :doc `This dimension stores the entire \"ITEM SEGMENT\" hierarchy with the lowest grain being the actual item (retailer SKU).`,\n  :publication {\n    :type \"table\",\n    :name \"item_dimension\",\n    :schema \"mart\"\n  }\n}\n#+begin\n  SELECT\n    o.offering_item_key AS item_key,\n    o.item_id,\n    o.item_name\n  FROM\n    {{ offering.OfferingItem() }} o\n#+end\n","platform":null}},{"fqn":"/retail/base/location/store_group","id":"abcc24f5-384b-11ef-8d8b-63ef4c357348","folder_id":"abcbd6d1-384b-11ef-8d8b-63ef4c357348","name":"store_group","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"#+import \"std/publication\"\n#+import \"coginiti.co/foundation/retail/sources\"\n#+import \"coginiti.co/foundation/retail/base\"\n\n#+src sql StoreGroup()\n#+meta {\n  :doc \"A dimensional type representing the fourth level of geographical grouping of stores within a District used for aggregating data.\",\n  :publication {\n    :type \"table\",\n    :name \"dim_store_group\",\n    :schema \"base\",\n    :primary_key [\"store_group_key\"],\n  }\n}\n#+begin\n  SELECT\n    {{ base.SurrogateKey(\"_t.natural_key\") }} AS store_group_key,\n    _t.store_group_code AS store_group_id,\n    _t.store_group AS store_group_name,\n    {{ base.SurrogateKey(\"_t.district_nk\") }} AS district_key,\n    b.system_timestamp AS start_datetime,\n    b.batch_number AS batch_number\n  FROM (\n    SELECT\n      store_group_nk AS natural_key,\n      store_group_code,\n      store_group,\n      district_nk,\n      ROW_NUMBER() OVER (PARTITION BY store_group_code ORDER BY store_group_code DESC, row_hash) AS row_num\n    FROM\n      {{ sources.Stores() }}\n  ) _t\n  CROSS JOIN {{ base.Batch() }} b\n  WHERE\n    _t.row_num = 1\n#+end\n","platform":null}},{"fqn":"/retail/base/_init","id":"abcc9a29-384b-11ef-8d8b-63ef4c357348","folder_id":"abcbafbe-384b-11ef-8d8b-63ef4c357348","name":"_init","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"#+src sql Init(): void\n#+meta {\n  :doc `Initialize a BASE schema with required tables.`\n}\n#+begin\n  DROP SEQUENCE IF EXISTS base.seq_surrogate_key;\n  CREATE SEQUENCE base.seq_surrogate_key START WITH 1;\n\n  DROP SEQUENCE IF EXISTS base.seq_batch;\n  CREATE SEQUENCE base.seq_batch START WITH 1;\n\n  DROP TABLE IF EXISTS base.batch_log;\n  CREATE TABLE base.batch_log(\n    batch_number BIGINT NOT NULL,\n    system_timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (batch_number)\n  );\n\n  DROP TABLE IF EXISTS base.numbers;\n  CREATE TABLE base.numbers AS\n  WITH tmp AS (\n    SELECT 1 AS i\n    UNION ALL SELECT 2\n    UNION ALL SELECT 3\n    UNION ALL SELECT 4\n    UNION ALL SELECT 5\n    UNION ALL SELECT 6\n    UNION ALL SELECT 7\n    UNION ALL SELECT 8\n    UNION ALL SELECT 9\n    UNION ALL SELECT 10\n  )\n  SELECT\n    ROW_NUMBER() OVER () AS id\n  FROM\n    tmp AS a1\n  CROSS JOIN tmp AS a2\n  CROSS JOIN tmp AS a3\n  CROSS JOIN tmp AS a4\n  ;\n#+end","platform":null}},{"fqn":"/retail/base/customer/persona","id":"abcdd2bd-384b-11ef-8d8b-63ef4c357348","folder_id":"abcdabac-384b-11ef-8d8b-63ef4c357348","name":"persona","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"#+import \"std/publication\"\n#+import \"coginiti.co/foundation/retail/base\"\n#+import \"coginiti.co/foundation/retail/sources\"\n\n#+src sql Persona()\n#+meta {\n  :doc `A dimensional type representing a customer as it is known to a source system.\n        Generally, the \"PERSONA\" will be identified by some source system generated identifier.\n        This identifier should be persistent and should never be destroyed.`,\n  :publication {\n    :type \"table\",\n    :name \"dim_persona\",\n    :schema \"base\",\n    :incremental \"merge\",\n    :unique_key [\"persona_key\"],\n    :update_on_changes_in [\"first_name\", \"last_name\", \"postal_address_key\", \"phone_number_key\", \"email_address_key\"]\n  }\n}\n#+begin\n  SELECT\n    {{ base.SurrogateKey(\"_t.natural_key\") }} AS persona_key,\n    _t.customer_id,\n    _t.first_name,\n    _t.last_name,\n    {{ base.SurrogateKey(\"_t.postal_address_nk\") }} AS postal_address_key,\n    {{ base.SurrogateKey(\"_t.phone_number_nk\") }} AS phone_number_key,\n    {{ base.SurrogateKey(\"_t.email_address_nk\") }} AS email_address_key,\n    b.system_timestamp AS start_datetime,\n    b.batch_number AS batch_number\n  FROM (\n    SELECT\n      persona_nk AS natural_key,\n      customer_id,\n      first_name,\n      last_name,\n      postal_address_nk,\n      phone_number_nk,\n      email_address_nk,\n      ROW_NUMBER() OVER (PARTITION BY customer_id ORDER BY customer_id DESC, row_hash) AS row_num\n    FROM\n      {{ sources.Customers() }}\n  ) _t\n  CROSS JOIN {{ base.Batch() }} b\n  WHERE\n    _t.row_num = 1\n  ;\n#+end\n","platform":null}},{"fqn":"/retail/base/touchpoint/postal_code_test","id":"abcd3674-384b-11ef-8d8b-63ef4c357348","folder_id":"abccc13d-384b-11ef-8d8b-63ef4c357348","name":"postal_code_test","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"\n#+test sql Test_PostalCode_NoDuplicatesInPK()\n#+begin\n  SELECT  \n    postal_code_key,\n    COUNT(*) AS cnt\n  FROM    \n    {{ PostalCode() }}\n  GROUP BY\n    postal_code_key\n  HAVING\n    COUNT(*) > 1\n  ;\n#+end","platform":null}},{"fqn":"/retail/base/datetime/date","id":"abcbd6d0-384b-11ef-8d8b-63ef4c357348","folder_id":"abcbafbf-384b-11ef-8d8b-63ef4c357348","name":"date","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"#+import \"coginiti.co/foundation/retail/sources\"\n#+import \"coginiti.co/foundation/retail/base\"\n\n#+src sql Date()\n#+meta {\n  :doc `A dimensional type representing the actual date. Its sub-types will be \"GREGORIAN DATE\" and \"FISCAL DATE\".`,\n  :publication {\n    :type \"table\",\n    :name \"dim_date\",\n    :schema \"base\"\n  }\n}\n#+begin\n  SELECT\n    {{ base.SurrogateKey(\"_t.natural_key\") }} AS date_key,\n    _t.business_day_date,\n    _t.calendar_year,\n    _t.calendar_quarter,\n    _t.calendar_month,\n    _t.calendar_week,\n    _t.calendar_week_day,\n    _t.calendar_holiday_flag,\n    _t.fiscal_year,\n    _t.fiscal_quarter,\n    _t.fiscal_period,\n    _t.fiscal_week,\n    _t.fiscal_week_day,\n    _t.fiscal_holiday_flag,\n    b.system_timestamp AS start_datetime,\n    b.batch_number AS batch_number\n  FROM (\n    SELECT\n      date_nk AS natural_key,\n      business_day_date,\n      calendar_year,\n      calendar_quarter,\n      calendar_month,\n      calendar_week,\n      calendar_week_day,\n      calendar_holiday_flag,\n      fiscal_year,\n      fiscal_quarter,\n      fiscal_period,\n      fiscal_week,\n      fiscal_week_day,\n      fiscal_holiday_flag\n    FROM\n      {{ sources.DateCalendar() }}\n  ) _t\n  CROSS JOIN {{ base.Batch() }} b\n  ;\n#+end\n","platform":null}},{"fqn":"/retail/base/sales/sales_header","id":"abcdabaa-384b-11ef-8d8b-63ef4c357348","folder_id":"abcd8498-384b-11ef-8d8b-63ef4c357348","name":"sales_header","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"#+import \"std/publication\"\n#+import \"coginiti.co/foundation/retail/sources\"\n#+import \"coginiti.co/foundation/retail/base\"\n#+import \"coginiti.co/foundation/retail/base/customer\"\n#+import \"coginiti.co/foundation/retail/base/location\"\n#+import \"coginiti.co/foundation/retail/base/datetime\"\n\n#+src sql SalesHeader()\n#+meta {\n  :doc `Header level information for a sales transaction (a.k.a. order). The presence of \"INBOUND CHANNEL KEY\" implies that\n        this is a multi-channel table, storing sales transactions from all sales channels.`,\n  :publication {\n    :type \"table\",\n    :name \"fact_sales_header\",\n    :schema \"base\"\n  }\n}\n#+begin\n  SELECT\n    {{ base.SurrogateKey(\"_t.natural_key\") }} AS sales_header_key,\n    transaction_id,\n    transaction_datetime,\n    {{ base.SurrogateKey(\"_t.date_nk\") }} AS transaction_date_key,\n    {{ base.SurrogateKey(\"_t.store_nk\") }} AS location_key,\n    {{ base.SurrogateKey(\"_t.persona_nk\") }} AS persona_key,\n    b.batch_number\n  FROM (\n    SELECT\n      sales_header_nk AS natural_key,\n      transaction_id,\n      transaction_datetime,\n      date_nk,\n      store_nk,\n      persona_nk,\n      ROW_NUMBER() OVER (PARTITION BY transaction_id ORDER BY transaction_datetime DESC) AS row_num\n    FROM\n      {{ sources.Sales() }} src\n  ) _t\n  CROSS JOIN {{ base.Batch() }} b\n  WHERE\n    _t.row_num = 1\n  ;\n#+end\n","platform":null}},{"fqn":"/retail/sources/sales","id":"abcb3a87-384b-11ef-8d8b-63ef4c357348","folder_id":"abca501e-384b-11ef-8d8b-63ef4c357348","name":"sales","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"#+src sql Sales()\n#+begin\n  SELECT\n    transaction_id,\n    transaction_timestamp AS transaction_datetime,\n    line_number,\n    customer_id,\n    store_id,\n    product_id,\n    quantity,\n    product_price AS price,\n    {{ NaturalKey(\"SH^\", [\"transaction_id\"]) }} AS sales_header_nk,\n    {{ NaturalKey(\"SD^\", [\"transaction_id\", \"line_number\"]) }} AS sales_detail_nk,\n    {{ NaturalKey(\"DATE^\", [\"DATE(transaction_timestamp)\"]) }} AS date_nk,\n    {{ NaturalKey(\"PER^\", [\"customer_id\"]) }} AS persona_nk,\n    {{ NaturalKey(\"STORE^\", [\"store_id\"]) }} AS store_nk,\n    {{ NaturalKey(\"PRD^\", [\"product_id\"]) }} AS product_nk\n  FROM\n    landing.sales\n  ;\n#+end\n\n","platform":null}},{"fqn":"/retail/landing/inbound_channel","id":"abce20e4-384b-11ef-8d8b-63ef4c357348","folder_id":"abcdd2bf-384b-11ef-8d8b-63ef4c357348","name":"inbound_channel","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"\n#+src sql InboundChannel()\n#+meta {\n  :publication {\n    :type \"table\",\n    :name \"inbound_channels\",\n    :schema \"landing\"\n  }\n}\n#+begin\n  SELECT \n    channel_name,\n    channel_code \n  FROM (\n    SELECT 'Store' AS channel_name, 'STR' AS channel_code\n    UNION ALL\n    SELECT 'Website', 'WEB'\n    UNION ALL\n    SELECT 'Mobile App', 'APP'\n    UNION ALL\n    SELECT 'Phone/Call Center', 'PCC'\n  ) AS channels\n  ;\n#+end","platform":null}},{"fqn":"/retail/sources/stores","id":"abca772f-384b-11ef-8d8b-63ef4c357348","folder_id":"abca501e-384b-11ef-8d8b-63ef4c357348","name":"stores","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"\n#+src sql Stores()\n#+begin\n  SELECT\n    store_id,\n    store_name,\n    country_code_2,\n    continent_name,\n    open_date,\n    closing_date,\n    size_unit_of_measure_code,\n    selling_area_size,\n    size,\n    last_remodel_date,\n    email_address,\n    phone_number,\n    market_region_code,\n    market_region,\n    market_area_code,\n    market_area,\n    district_code,\n    district,\n    store_group_code,\n    store_group,\n    address_line_1,\n    address_line_2,\n    city,\n    postal_code,\n    inbound_channel_code,\n    SPLIT_PART(email_address, '@', 2) AS email_domain,\n    {{ NaturalKey(\"STORE^\", [\"store_id\"]) }} AS store_nk,\n    {{ NaturalKey(\"EMAIL^\", [\"email_address\"]) }} AS email_address_nk,\n    {{ NaturalKey(\"EML_DMN^\", [\"SPLIT_PART(email_address, '@', 2)\"]) }} AS email_domain_nk,\n    {{ NaturalKey(\"PHONE^\", [\"phone_number\"]) }} AS phone_number_nk,\n    {{ NaturalKey(\"MREGION^\", [\"market_region_code\"]) }} AS market_region_nk,\n    {{ NaturalKey(\"MAREA^\", [\"market_area_code\"]) }} AS market_area_nk,\n    {{ NaturalKey(\"DISTRICT^\", [\"district_code\"]) }} AS district_nk,\n    {{ NaturalKey(\"SGROUP^\", [\"store_group_code\"]) }} AS store_group_nk,\n    c.iso_2_code AS country_nk,\n    {{ NaturalKey(\"PADDR^\", [\"address_line_1\", \"address_line_2\", \"city\", \"postal_code\"]) }} AS postal_address_nk,\n    {{ NaturalKey(\"PCODE^\", [\"postal_code\"]) }} AS postal_code_nk,\n    {{ NaturalKey(\"IC^\", [\"inbound_channel_code\"]) }} AS inbound_channel_nk,\n    {{ RowHash([\n        \"store_id\",\n        \"store_name\",\n        \"country_code_2\",\n        \"continent_name\",\n        \"open_date\",\n        \"closing_date\",\n        \"size_unit_of_measure_code\",\n        \"selling_area_size\",\n        \"size\",\n        \"last_remodel_date\",\n        \"email_address\",\n        \"phone_number\",\n        \"market_region_code\",\n        \"market_region\",\n        \"market_area_code\",\n        \"market_area\",\n        \"district_code\",\n        \"district\",\n        \"store_group_code\",\n        \"store_group\",\n        \"address_line_1\",\n        \"address_line_2\",\n        \"city\",\n        \"postal_code\",\n        \"inbound_channel_code\"\n    ]) }} AS row_hash\n  FROM\n    landing.stores\n  LEFT JOIN {{ CountryPhoneCodes() }} c\n    ON LEFT(phone_number, LENGTH(c.phone_number_code)) = c.phone_number_code    \n  ;\n#+end\n\n#+src sql CountryPhoneCodes()\n#+begin\n  SELECT\n    iso_2_code,\n    phone_number_code,\n    phone_number_length\n  FROM\n    landing.country_phone_codes\n#+end\n\n","platform":null}},{"fqn":"/retail/base/touchpoint/postal_code","id":"abcd0f61-384b-11ef-8d8b-63ef4c357348","folder_id":"abccc13d-384b-11ef-8d8b-63ef4c357348","name":"postal_code","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"#+import \"coginiti.co/foundation/retail/base\"\n#+import \"coginiti.co/foundation/retail/sources\"\n\n#+src sql PostalCode()\n#+meta {\n  :doc `The postal or zip code of the address. We store rows for the basic postal code without any extension,\n        as well as the complete postal code with extension. This allows us to have a foreign key reference to\n        more or less granular dimension members and facts without creating completely separate postal code types\n        and adding to the hierarchy.\n        \n        For example, we will have the following Connecticut rows:\n        [\n          {\"POSTAL CODE\":\"06002\", \"POSTAL CODE EXTENSION\":NULL, \"POSTAL CODE fk reference\":\"06002\"},\n          {\"POSTAL CODE\":\"06002\", \"POSTAL CODE EXTENSION\":\"9001\", \"POSTAL CODE fk reference\":\"06002\"}\n        ].`,\n  :publication {\n    :type \"table\",\n    :name \"dim_postal_code\",\n    :schema \"base\"\n  }\n}\n#+begin\n  WITH source_rows AS (\n    SELECT\n      postal_code_nk AS natural_key,\n      postal_code,\n      row_hash\n    FROM\n      {{ sources.Customers() }}\n\n    UNION ALL\n\n    SELECT\n      postal_code_nk AS natural_key,\n      postal_code,\n      row_hash\n    FROM\n      {{ sources.Stores() }}\n  )\n\n  SELECT\n    {{ base.SurrogateKey(\"_t.natural_key\") }} AS postal_code_key,\n    _t.postal_code,\n    b.system_timestamp AS start_datetime,\n    b.batch_number AS batch_number\n  FROM (\n    SELECT\n      *,\n      ROW_NUMBER() OVER (PARTITION BY natural_key ORDER BY natural_key DESC, row_hash) AS row_num\n    FROM\n      source_rows\n  ) _t\n  CROSS JOIN {{ base.Batch() }} b\n  WHERE\n    _t.row_num = 1\n  ;\n#+end\n","platform":null}},{"fqn":"/retail/sources/customers","id":"abca7730-384b-11ef-8d8b-63ef4c357348","folder_id":"abca501e-384b-11ef-8d8b-63ef4c357348","name":"customers","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"#+src sql Customers()\n#+begin\n  SELECT\n    id AS customer_id,\n    first_name,\n    last_name,\n    email,\n    address_line_1,\n    address_line_2,\n    city,\n    postal_code,\n    phone_number,\n    SPLIT_PART(email, '@', 2) AS email_domain,\n    {{ NaturalKey(\"PER^\", [\"id\"]) }} AS persona_nk,\n    {{ NaturalKey(\"EML^\", [\"email\"]) }} AS email_address_nk,\n    {{ NaturalKey(\"EML_DMN^\", [\"SPLIT_PART(email, '@', 2)\"]) }} AS email_domain_nk,\n    {{ NaturalKey(\"PADDR^\", [\"address_line_1\", \"address_line_2\", \"city\", \"postal_code\"]) }} AS postal_address_nk,\n    {{ NaturalKey(\"PCODE^\", [\"postal_code\"]) }} AS postal_code_nk,\n    {{ NaturalKey(\"PHONE^\", [\"phone_number\"]) }} AS phone_number_nk,\n    c.iso_2_code AS country_nk,\n    {{ RowHash([\n      \"id\",\n      \"first_name\",\n      \"last_name\",\n      \"email\",\n      \"address_line_1\",\n      \"address_line_2\",\n      \"city\",\n      \"postal_code\",\n      \"phone_number\"\n    ]) }} AS row_hash\n  FROM\n    landing.customers\n  LEFT JOIN {{ CountryPhoneCodes() }} c\n    ON LEFT(phone_number, LENGTH(c.phone_number_code)) = c.phone_number_code\n  ;\n#+end\n\n\n","platform":null}},{"fqn":"/retail/base/touchpoint/country","id":"abcd5d86-384b-11ef-8d8b-63ef4c357348","folder_id":"abccc13d-384b-11ef-8d8b-63ef4c357348","name":"country","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"#+import \"std/publication\"\n#+import \"coginiti.co/foundation/retail/sources\"\n#+import \"coginiti.co/foundation/retail/base\"\n\n#+src sql Country()\n#+meta {\n  :doc \"A dimensional type representing the geographic country.\",\n  :publication {\n    :type \"table\",\n    :name \"dim_country\",\n    :schema \"base\"\n  }\n}\n#+begin\n  SELECT\n    {{ base.SurrogateKey(\"_t.iso_2_code\") }} AS country_key,\n    name AS country_name,\n    iso_2_code AS country_code_2char,\n    iso_3_code AS country_code_3char,\n    country_num_code AS country_code_number,\n    b.system_timestamp AS start_datetime,\n    b.batch_number AS batch_number\n  FROM\n    {{ sources.Countries() }} AS _t\n  CROSS JOIN {{ base.Batch() }} b\n#+end\n","platform":null}},{"fqn":"/retail/sources/customers_test","id":"abcac554-384b-11ef-8d8b-63ef4c357348","folder_id":"abca501e-384b-11ef-8d8b-63ef4c357348","name":"customers_test","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"#+test sql Test_Customers_UniqueID()\n#+meta {\n  :doc `Verifies the uniqueness of the 'customer_id' field.`\n}\n#+begin\n  SELECT\n    customer_id,\n    COUNT(*) AS cnt\n  FROM\n    {{ Customers() }}\n  GROUP BY\n    customer_id\n  HAVING\n    COUNT(*) > 1\n  ;\n#+end\n\n#+test sql Test_Customers_ValidEmail()\n#+meta {\n  :doc `Verifies the validity of the 'email' field.`\n}\n#+begin\n  SELECT\n    customer_id,\n    email\n  FROM\n    {{ Customers() }}\n  WHERE\n    email !~* '^[A-Za-z0-9._%-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$'\n  ;\n#+end\n","platform":null}},{"fqn":"/retail/base/touchpoint/email_domain_test","id":"abcce84f-384b-11ef-8d8b-63ef4c357348","folder_id":"abccc13d-384b-11ef-8d8b-63ef4c357348","name":"email_domain_test","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"\n#+test sql Test_EmailDomain_NoDuplicatesInPK()\n#+begin\n  SELECT  \n    email_domain_key,\n    COUNT(*) AS cnt\n  FROM\n    {{ EmailDomain() }}\n  GROUP BY\n    email_domain_key\n  HAVING\n    COUNT(*) > 1\n  ;\n#+end","platform":null}},{"fqn":"/retail/sources","id":"abca501e-384b-11ef-8d8b-63ef4c357348","folder_id":"abc98cc4-384b-11ef-8d8b-63ef4c357348","name":"sources","entity_type":"folder","entity_version":"yuejdx2WRvwKW+oWUZvn3t+tBPch+AlttiMAQqrWNc0=","data":{"folder_type":"REGULAR","copied_from_id":null}},{"fqn":"/retail/base/datetime","id":"abcbafbf-384b-11ef-8d8b-63ef4c357348","folder_id":"abcbafbe-384b-11ef-8d8b-63ef4c357348","name":"datetime","entity_type":"folder","entity_version":"yuejdx2WRvwKW+oWUZvn3t+tBPch+AlttiMAQqrWNc0=","data":{"folder_type":"REGULAR","copied_from_id":null}},{"fqn":"/retail/derived_attributes/persona_rfm","id":"abce6f0b-384b-11ef-8d8b-63ef4c357348","folder_id":"abce6f0a-384b-11ef-8d8b-63ef4c357348","name":"persona_rfm","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"#+import \"coginiti.co/foundation/retail/base/sales\"\n\n#+src sql PersonaRFMValues()\n#+meta {\n  :doc \"Calculate customer RFM values.\"\n}\n#+begin\n  SELECT\n    persona_key,\n    MIN(sh.transaction_datetime) AS first_order,\n    MAX(sh.transaction_datetime) AS recent_order,\n    COUNT(sh.transaction_id) AS total_orders,\n    SUM(sd.unit_quantity * sd.unit_price_amount) AS total_sales\n  FROM\n    {{ sales.SalesDetail() }} sd\n  INNER JOIN {{ sales.SalesHeader() }} sh\n    ON sh.sales_header_key = sd.sales_header_key\n  GROUP BY\n    persona_key\n#+end\n\n#+src sql PersonaRFMSegments()\n#+meta {\n  :doc \"Calculate customer RFM segment.\"\n}\n#+begin\n  WITH t AS (\n    SELECT\n      persona_key,\n      rfm_recency,\n      rfm_frequency,\n      rfm_monetary,\n      rfm_recency * 100 + rfm_frequency * 10 + rfm_monetary AS rfm_cell\n    FROM\n      {{ rfmQuantiles() }}\n  )\n  SELECT\n    persona_key,\n    rfm_recency,\n    rfm_frequency,\n    rfm_monetary,\n    rfm_cell,\n    CASE\n      WHEN rfm_cell IN (355,255) THEN 'Cannot lose'\n      WHEN rfm_cell IN (543,542,453,452) THEN 'Active fans'\n      WHEN rfm_cell IN (525,524,515,514) THEN 'Promising newbies'\n      WHEN rfm_cell IN (335,334,325,324) THEN 'Potential churners'\n      ELSE 'Other'\n    END AS rfm_segment\n  FROM\n    t\n  ORDER BY 6 DESC\n#+end\n\n#+src sql rfmQuantiles()\n#+begin\n  SELECT\n    persona_key,\n    NTILE(5) OVER ( ORDER BY recent_order ) AS rfm_recency,\n    NTILE(5) OVER ( ORDER BY total_orders ) AS rfm_frequency,\n    NTILE(5) OVER ( ORDER BY total_sales ) AS rfm_monetary\n  FROM\n    {{ PersonaRFMValues() }} AS p\n  ORDER BY 2 DESC\n#+end\n","platform":null}},{"fqn":"/retail/base/location/location_size_unit_of_measure_lookup","id":"abcc7317-384b-11ef-8d8b-63ef4c357348","folder_id":"abcbd6d1-384b-11ef-8d8b-63ef4c357348","name":"location_size_unit_of_measure_lookup","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"\n#+src sql LocationSizeUnitOfMeasureLookup()\n#+begin\n#+end","platform":null}},{"fqn":"/retail/landing/countries","id":"abce6f09-384b-11ef-8d8b-63ef4c357348","folder_id":"abcdd2bf-384b-11ef-8d8b-63ef4c357348","name":"countries","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"\n#+src sql Countries()\n#+meta {\n  :publication {\n    :type \"table\",\n    :name \"countries\",\n    :schema \"landing\"\n  }\n}\n#+begin\n  CREATE TEMPORARY TABLE tmp_countries(\n    country_code_2chars CHAR(2) NOT NULL,\n    country_code_3chars CHAR(3) NOT NULL,\n    \"name\" VARCHAR(255) NOT NULL,\n    country_num_code INTEGER NOT NULL,\n    region VARCHAR(255) NOT NULL\n  );\n\n  INSERT INTO tmp_countries (country_code_2chars,country_code_3chars,\"name\",country_num_code,region) VALUES\n    ('AF','AFG','Afghanistan',4,'Asia'),\n    ('AX','ALA','Åland Islands',248,'Europe'),\n    ('AL','ALB','Albania',8,'Europe'),\n    ('DZ','DZA','Algeria',12,'Africa'),\n    ('AS','ASM','American Samoa',16,'Oceania'),\n    ('AD','AND','Andorra',20,'Europe'),\n    ('AO','AGO','Angola',24,'Africa'),\n    ('AI','AIA','Anguilla',660,'Americas'),\n    ('AQ','ATA','Antarctica',10,''),\n    ('AG','ATG','Antigua and Barbuda',28,'Americas');\n  INSERT INTO tmp_countries (country_code_2chars,country_code_3chars,\"name\",country_num_code,region) VALUES\n    ('AR','ARG','Argentina',32,'Americas'),\n    ('AM','ARM','Armenia',51,'Asia'),\n    ('AW','ABW','Aruba',533,'Americas'),\n    ('AU','AUS','Australia',36,'Oceania'),\n    ('AT','AUT','Austria',40,'Europe'),\n    ('AZ','AZE','Azerbaijan',31,'Asia'),\n    ('BS','BHS','Bahamas',44,'Americas'),\n    ('BH','BHR','Bahrain',48,'Asia'),\n    ('BD','BGD','Bangladesh',50,'Asia'),\n    ('BB','BRB','Barbados',52,'Americas');\n  INSERT INTO tmp_countries (country_code_2chars,country_code_3chars,\"name\",country_num_code,region) VALUES\n    ('BY','BLR','Belarus',112,'Europe'),\n    ('BE','BEL','Belgium',56,'Europe'),\n    ('BZ','BLZ','Belize',84,'Americas'),\n    ('BJ','BEN','Benin',204,'Africa'),\n    ('BM','BMU','Bermuda',60,'Americas'),\n    ('BT','BTN','Bhutan',64,'Asia'),\n    ('BO','BOL','Bolivia (Plurinational State of)',68,'Americas'),\n    ('BQ','BES','Bonaire, Sint Eustatius and Saba',535,'Americas'),\n    ('BA','BIH','Bosnia and Herzegovina',70,'Europe'),\n    ('BW','BWA','Botswana',72,'Africa');\n  INSERT INTO tmp_countries (country_code_2chars,country_code_3chars,\"name\",country_num_code,region) VALUES\n    ('BV','BVT','Bouvet Island',74,'Americas'),\n    ('BR','BRA','Brazil',76,'Americas'),\n    ('IO','IOT','British Indian Ocean Territory',86,'Africa'),\n    ('BN','BRN','Brunei Darussalam',96,'Asia'),\n    ('BG','BGR','Bulgaria',100,'Europe'),\n    ('BF','BFA','Burkina Faso',854,'Africa'),\n    ('BI','BDI','Burundi',108,'Africa'),\n    ('CV','CPV','Cabo Verde',132,'Africa'),\n    ('KH','KHM','Cambodia',116,'Asia'),\n    ('CM','CMR','Cameroon',120,'Africa');\n  INSERT INTO tmp_countries (country_code_2chars,country_code_3chars,\"name\",country_num_code,region) VALUES\n    ('CA','CAN','Canada',124,'Americas'),\n    ('KY','CYM','Cayman Islands',136,'Americas'),\n    ('CF','CAF','Central African Republic',140,'Africa'),\n    ('TD','TCD','Chad',148,'Africa'),\n    ('CL','CHL','Chile',152,'Americas'),\n    ('CN','CHN','China',156,'Asia'),\n    ('CX','CXR','Christmas Island',162,'Oceania'),\n    ('CC','CCK','Cocos (Keeling) Islands',166,'Oceania'),\n    ('CO','COL','Colombia',170,'Americas'),\n    ('KM','COM','Comoros',174,'Africa');\n  INSERT INTO tmp_countries (country_code_2chars,country_code_3chars,\"name\",country_num_code,region) VALUES\n    ('CG','COG','Congo',178,'Africa'),\n    ('CD','COD','Congo, Democratic Republic of the',180,'Africa'),\n    ('CK','COK','Cook Islands',184,'Oceania'),\n    ('CR','CRI','Costa Rica',188,'Americas'),\n    ('CI','CIV','Côte d''Ivoire',384,'Africa'),\n    ('HR','HRV','Croatia',191,'Europe'),\n    ('CU','CUB','Cuba',192,'Americas'),\n    ('CW','CUW','Curaçao',531,'Americas'),\n    ('CY','CYP','Cyprus',196,'Asia'),\n    ('CZ','CZE','Czechia',203,'Europe');\n  INSERT INTO tmp_countries (country_code_2chars,country_code_3chars,\"name\",country_num_code,region) VALUES\n    ('DK','DNK','Denmark',208,'Europe'),\n    ('DJ','DJI','Djibouti',262,'Africa'),\n    ('DM','DMA','Dominica',212,'Americas'),\n    ('DO','DOM','Dominican Republic',214,'Americas'),\n    ('EC','ECU','Ecuador',218,'Americas'),\n    ('EG','EGY','Egypt',818,'Africa'),\n    ('SV','SLV','El Salvador',222,'Americas'),\n    ('GQ','GNQ','Equatorial Guinea',226,'Africa'),\n    ('ER','ERI','Eritrea',232,'Africa'),\n    ('EE','EST','Estonia',233,'Europe');\n  INSERT INTO tmp_countries (country_code_2chars,country_code_3chars,\"name\",country_num_code,region) VALUES\n    ('SZ','SWZ','Eswatini',748,'Africa'),\n    ('ET','ETH','Ethiopia',231,'Africa'),\n    ('FK','FLK','Falkland Islands (Malvinas)',238,'Americas'),\n    ('FO','FRO','Faroe Islands',234,'Europe'),\n    ('FJ','FJI','Fiji',242,'Oceania'),\n    ('FI','FIN','Finland',246,'Europe'),\n    ('FR','FRA','France',250,'Europe'),\n    ('GF','GUF','French Guiana',254,'Americas'),\n    ('PF','PYF','French Polynesia',258,'Oceania'),\n    ('TF','ATF','French Southern Territories',260,'Africa');\n  INSERT INTO tmp_countries (country_code_2chars,country_code_3chars,\"name\",country_num_code,region) VALUES\n    ('GA','GAB','Gabon',266,'Africa'),\n    ('GM','GMB','Gambia',270,'Africa'),\n    ('GE','GEO','Georgia',268,'Asia'),\n    ('DE','DEU','Germany',276,'Europe'),\n    ('GH','GHA','Ghana',288,'Africa'),\n    ('GI','GIB','Gibraltar',292,'Europe'),\n    ('GR','GRC','Greece',300,'Europe'),\n    ('GL','GRL','Greenland',304,'Americas'),\n    ('GD','GRD','Grenada',308,'Americas'),\n    ('GP','GLP','Guadeloupe',312,'Americas');\n  INSERT INTO tmp_countries (country_code_2chars,country_code_3chars,\"name\",country_num_code,region) VALUES\n    ('GU','GUM','Guam',316,'Oceania'),\n    ('GT','GTM','Guatemala',320,'Americas'),\n    ('GG','GGY','Guernsey',831,'Europe'),\n    ('GN','GIN','Guinea',324,'Africa'),\n    ('GW','GNB','Guinea-Bissau',624,'Africa'),\n    ('GY','GUY','Guyana',328,'Americas'),\n    ('HT','HTI','Haiti',332,'Americas'),\n    ('HM','HMD','Heard Island and McDonald Islands',334,'Oceania'),\n    ('VA','VAT','Holy See',336,'Europe'),\n    ('HN','HND','Honduras',340,'Americas');\n  INSERT INTO tmp_countries (country_code_2chars,country_code_3chars,\"name\",country_num_code,region) VALUES\n    ('HK','HKG','Hong Kong',344,'Asia'),\n    ('HU','HUN','Hungary',348,'Europe'),\n    ('IS','ISL','Iceland',352,'Europe'),\n    ('IN','IND','India',356,'Asia'),\n    ('ID','IDN','Indonesia',360,'Asia'),\n    ('IR','IRN','Iran (Islamic Republic of)',364,'Asia'),\n    ('IQ','IRQ','Iraq',368,'Asia'),\n    ('IE','IRL','Ireland',372,'Europe'),\n    ('IM','IMN','Isle of Man',833,'Europe'),\n    ('IL','ISR','Israel',376,'Asia');\n  INSERT INTO tmp_countries (country_code_2chars,country_code_3chars,\"name\",country_num_code,region) VALUES\n    ('IT','ITA','Italy',380,'Europe'),\n    ('JM','JAM','Jamaica',388,'Americas'),\n    ('JP','JPN','Japan',392,'Asia'),\n    ('JE','JEY','Jersey',832,'Europe'),\n    ('JO','JOR','Jordan',400,'Asia'),\n    ('KZ','KAZ','Kazakhstan',398,'Asia'),\n    ('KE','KEN','Kenya',404,'Africa'),\n    ('KI','KIR','Kiribati',296,'Oceania'),\n    ('KP','PRK','Korea (Democratic People''s Republic of)',408,'Asia'),\n    ('KR','KOR','Korea, Republic of',410,'Asia');\n  INSERT INTO tmp_countries (country_code_2chars,country_code_3chars,\"name\",country_num_code,region) VALUES\n    ('KW','KWT','Kuwait',414,'Asia'),\n    ('KG','KGZ','Kyrgyzstan',417,'Asia'),\n    ('LA','LAO','Lao People''s Democratic Republic',418,'Asia'),\n    ('LV','LVA','Latvia',428,'Europe'),\n    ('LB','LBN','Lebanon',422,'Asia'),\n    ('LS','LSO','Lesotho',426,'Africa'),\n    ('LR','LBR','Liberia',430,'Africa'),\n    ('LY','LBY','Libya',434,'Africa'),\n    ('LI','LIE','Liechtenstein',438,'Europe'),\n    ('LT','LTU','Lithuania',440,'Europe');\n  INSERT INTO tmp_countries (country_code_2chars,country_code_3chars,\"name\",country_num_code,region) VALUES\n    ('LU','LUX','Luxembourg',442,'Europe'),\n    ('MO','MAC','Macao',446,'Asia'),\n    ('MG','MDG','Madagascar',450,'Africa'),\n    ('MW','MWI','Malawi',454,'Africa'),\n    ('MY','MYS','Malaysia',458,'Asia'),\n    ('MV','MDV','Maldives',462,'Asia'),\n    ('ML','MLI','Mali',466,'Africa'),\n    ('MT','MLT','Malta',470,'Europe'),\n    ('MH','MHL','Marshall Islands',584,'Oceania'),\n    ('MQ','MTQ','Martinique',474,'Americas');\n  INSERT INTO tmp_countries (country_code_2chars,country_code_3chars,\"name\",country_num_code,region) VALUES\n    ('MR','MRT','Mauritania',478,'Africa'),\n    ('MU','MUS','Mauritius',480,'Africa'),\n    ('YT','MYT','Mayotte',175,'Africa'),\n    ('MX','MEX','Mexico',484,'Americas'),\n    ('FM','FSM','Micronesia (Federated States of)',583,'Oceania'),\n    ('MD','MDA','Moldova, Republic of',498,'Europe'),\n    ('MC','MCO','Monaco',492,'Europe'),\n    ('MN','MNG','Mongolia',496,'Asia'),\n    ('ME','MNE','Montenegro',499,'Europe'),\n    ('MS','MSR','Montserrat',500,'Americas');\n  INSERT INTO tmp_countries (country_code_2chars,country_code_3chars,\"name\",country_num_code,region) VALUES\n    ('MA','MAR','Morocco',504,'Africa'),\n    ('MZ','MOZ','Mozambique',508,'Africa'),\n    ('MM','MMR','Myanmar',104,'Asia'),\n    ('NA','NAM','Namibia',516,'Africa'),\n    ('NR','NRU','Nauru',520,'Oceania'),\n    ('NP','NPL','Nepal',524,'Asia'),\n    ('NL','NLD','Netherlands',528,'Europe'),\n    ('NC','NCL','New Caledonia',540,'Oceania'),\n    ('NZ','NZL','New Zealand',554,'Oceania'),\n    ('NI','NIC','Nicaragua',558,'Americas');\n  INSERT INTO tmp_countries (country_code_2chars,country_code_3chars,\"name\",country_num_code,region) VALUES\n    ('NE','NER','Niger',562,'Africa'),\n    ('NG','NGA','Nigeria',566,'Africa'),\n    ('NU','NIU','Niue',570,'Oceania'),\n    ('NF','NFK','Norfolk Island',574,'Oceania'),\n    ('MK','MKD','North Macedonia',807,'Europe'),\n    ('MP','MNP','Northern Mariana Islands',580,'Oceania'),\n    ('NO','NOR','Norway',578,'Europe'),\n    ('OM','OMN','Oman',512,'Asia'),\n    ('PK','PAK','Pakistan',586,'Asia'),\n    ('PW','PLW','Palau',585,'Oceania');\n  INSERT INTO tmp_countries (country_code_2chars,country_code_3chars,\"name\",country_num_code,region) VALUES\n    ('PS','PSE','Palestine, State of',275,'Asia'),\n    ('PA','PAN','Panama',591,'Americas'),\n    ('PG','PNG','Papua New Guinea',598,'Oceania'),\n    ('PY','PRY','Paraguay',600,'Americas'),\n    ('PE','PER','Peru',604,'Americas'),\n    ('PH','PHL','Philippines',608,'Asia'),\n    ('PN','PCN','Pitcairn',612,'Oceania'),\n    ('PL','POL','Poland',616,'Europe'),\n    ('PT','PRT','Portugal',620,'Europe'),\n    ('PR','PRI','Puerto Rico',630,'Americas');\n  INSERT INTO tmp_countries (country_code_2chars,country_code_3chars,\"name\",country_num_code,region) VALUES\n    ('QA','QAT','Qatar',634,'Asia'),\n    ('RE','REU','Réunion',638,'Africa'),\n    ('RO','ROU','Romania',642,'Europe'),\n    ('RU','RUS','Russian Federation',643,'Europe'),\n    ('RW','RWA','Rwanda',646,'Africa'),\n    ('BL','BLM','Saint Barthélemy',652,'Americas'),\n    ('SH','SHN','Saint Helena, Ascension and Tristan da Cunha',654,'Africa'),\n    ('KN','KNA','Saint Kitts and Nevis',659,'Americas'),\n    ('LC','LCA','Saint Lucia',662,'Americas'),\n    ('MF','MAF','Saint Martin (French part)',663,'Americas');\n  INSERT INTO tmp_countries (country_code_2chars,country_code_3chars,\"name\",country_num_code,region) VALUES\n    ('PM','SPM','Saint Pierre and Miquelon',666,'Americas'),\n    ('VC','VCT','Saint Vincent and the Grenadines',670,'Americas'),\n    ('WS','WSM','Samoa',882,'Oceania'),\n    ('SM','SMR','San Marino',674,'Europe'),\n    ('ST','STP','Sao Tome and Principe',678,'Africa'),\n    ('SA','SAU','Saudi Arabia',682,'Asia'),\n    ('SN','SEN','Senegal',686,'Africa'),\n    ('RS','SRB','Serbia',688,'Europe'),\n    ('SC','SYC','Seychelles',690,'Africa'),\n    ('SL','SLE','Sierra Leone',694,'Africa');\n  INSERT INTO tmp_countries (country_code_2chars,country_code_3chars,\"name\",country_num_code,region) VALUES\n    ('SG','SGP','Singapore',702,'Asia'),\n    ('SX','SXM','Sint Maarten (Dutch part)',534,'Americas'),\n    ('SK','SVK','Slovakia',703,'Europe'),\n    ('SI','SVN','Slovenia',705,'Europe'),\n    ('SB','SLB','Solomon Islands',90,'Oceania'),\n    ('SO','SOM','Somalia',706,'Africa'),\n    ('ZA','ZAF','South Africa',710,'Africa'),\n    ('GS','SGS','South Georgia and the South Sandwich Islands',239,'Americas'),\n    ('SS','SSD','South Sudan',728,'Africa'),\n    ('ES','ESP','Spain',724,'Europe');\n  INSERT INTO tmp_countries (country_code_2chars,country_code_3chars,\"name\",country_num_code,region) VALUES\n    ('LK','LKA','Sri Lanka',144,'Asia'),\n    ('SD','SDN','Sudan',729,'Africa'),\n    ('SR','SUR','Suriname',740,'Americas'),\n    ('SJ','SJM','Svalbard and Jan Mayen',744,'Europe'),\n    ('SE','SWE','Sweden',752,'Europe'),\n    ('CH','CHE','Switzerland',756,'Europe'),\n    ('SY','SYR','Syrian Arab Republic',760,'Asia'),\n    ('TW','TWN','Taiwan, Province of China',158,'Asia'),\n    ('TJ','TJK','Tajikistan',762,'Asia'),\n    ('TZ','TZA','Tanzania, United Republic of',834,'Africa');\n  INSERT INTO tmp_countries (country_code_2chars,country_code_3chars,\"name\",country_num_code,region) VALUES\n    ('TH','THA','Thailand',764,'Asia'),\n    ('TL','TLS','Timor-Leste',626,'Asia'),\n    ('TG','TGO','Togo',768,'Africa'),\n    ('TK','TKL','Tokelau',772,'Oceania'),\n    ('TO','TON','Tonga',776,'Oceania'),\n    ('TT','TTO','Trinidad and Tobago',780,'Americas'),\n    ('TN','TUN','Tunisia',788,'Africa'),\n    ('TR','TUR','Turkey',792,'Asia'),\n    ('TM','TKM','Turkmenistan',795,'Asia'),\n    ('TC','TCA','Turks and Caicos Islands',796,'Americas');\n  INSERT INTO tmp_countries (country_code_2chars,country_code_3chars,\"name\",country_num_code,region) VALUES\n    ('TV','TUV','Tuvalu',798,'Oceania'),\n    ('UG','UGA','Uganda',800,'Africa'),\n    ('UA','UKR','Ukraine',804,'Europe'),\n    ('AE','ARE','United Arab Emirates',784,'Asia'),\n    ('GB','GBR','United Kingdom of Great Britain and Northern Ireland',826,'Europe'),\n    ('US','USA','United States of America',840,'Americas'),\n    ('UM','UMI','United States Minor Outlying Islands',581,'Oceania'),\n    ('UY','URY','Uruguay',858,'Americas'),\n    ('UZ','UZB','Uzbekistan',860,'Asia'),\n    ('VU','VUT','Vanuatu',548,'Oceania');\n  INSERT INTO tmp_countries (country_code_2chars,country_code_3chars,\"name\",country_num_code,region) VALUES\n    ('VE','VEN','Venezuela (Bolivarian Republic of)',862,'Americas'),\n    ('VN','VNM','Viet Nam',704,'Asia'),\n    ('VG','VGB','Virgin Islands (British)',92,'Americas'),\n    ('VI','VIR','Virgin Islands (U.S.)',850,'Americas'),\n    ('WF','WLF','Wallis and Futuna',876,'Oceania'),\n    ('EH','ESH','Western Sahara',732,'Africa'),\n    ('YE','YEM','Yemen',887,'Asia'),\n    ('ZM','ZMB','Zambia',894,'Africa'),\n    ('ZW','ZWE','Zimbabwe',716,'Africa');\n\n  SELECT\n    *\n  FROM\n    tmp_countries\n  ;\n#+end\n\n","platform":null}},{"fqn":"/retail/mart/date_dimension","id":"abca01f8-384b-11ef-8d8b-63ef4c357348","folder_id":"abc9b3d5-384b-11ef-8d8b-63ef4c357348","name":"date_dimension","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"#+import \"coginiti.co/foundation/retail/base/datetime\"\n\n#+src sql DateDimension()\n#+meta {\n  :doc `This dimension stores all available \"DATE AND TIME\" hierarchies associated with a date.`,\n  :publication {\n    :type \"table\",\n    :name \"date_dimension\",\n    :schema \"mart\"\n  }\n}\n#+begin\n  SELECT\n    d.date_key,\n    d.business_day_date,\n    d.calendar_year,\n    d.calendar_quarter,\n    d.calendar_month,\n    d.calendar_week,\n    d.calendar_week_day,\n    d.calendar_holiday_flag,\n    d.fiscal_year,\n    d.fiscal_quarter,\n    d.fiscal_period,\n    d.fiscal_week,\n    d.fiscal_week_day,\n    d.fiscal_holiday_flag\n  FROM\n    {{ datetime.Date() }} d\n#+end\n","platform":null}},{"fqn":"/retail/landing/series","id":"abce47f6-384b-11ef-8d8b-63ef4c357348","folder_id":"abcdd2bf-384b-11ef-8d8b-63ef4c357348","name":"series","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"#+src sql Series(n)\n#+begin\n  SELECT\n    *\n  FROM\n    base.numbers\n  ORDER BY\n    id\n  LIMIT\n    {{ n }}\n  ;\n#+end\n\n#+src sql DateSeries(start_date, num_days)\n#+begin\n  SELECT\n    '{{ start_date }}'::DATE AS d\n\n  UNION ALL\n\n  SELECT\n    ('{{ start_date }}'::DATE + s.id * INTERVAL '1 day')::DATE AS d\n  FROM\n    {{ Series(num_days) }} AS s\n  ORDER BY\n    d\n#+end\n","platform":null}},{"fqn":"/retail/sources/countries","id":"abcaec66-384b-11ef-8d8b-63ef4c357348","folder_id":"abca501e-384b-11ef-8d8b-63ef4c357348","name":"countries","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"\n#+src sql Countries()\n#+begin\n   SELECT\n    country_code_2chars AS iso_2_code,\n    country_code_3chars AS iso_3_code,\n    country_num_code,\n    name\n  FROM\n    landing.countries\n  ;\n#+end","platform":null}},{"fqn":"/retail/mart/persona_dimension","id":"abca290b-384b-11ef-8d8b-63ef4c357348","folder_id":"abc9b3d5-384b-11ef-8d8b-63ef4c357348","name":"persona_dimension","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"#+import \"coginiti.co/foundation/retail/base/touchpoint\"\n#+import \"coginiti.co/foundation/retail/base/customer\"\n\n#+src sql PersonaDimension()\n#+meta {\n  :doc \"This dimension stores the customer as it is known to a source system.\",\n  :publication {\n    :type \"table\",\n    :name \"persona_dimension\",\n    :schema \"mart\"\n  }\n}\n#+begin\n  SELECT\n    p.persona_key,\n    p.customer_id,\n    p.first_name,\n    p.last_name,\n    p.postal_address_key AS primary_postal_address_key,\n    e.email_address AS primary_email_address,\n    pn.complete_number AS primary_complete_phone_number\n  FROM\n    {{ customer.Persona() }} p\n  INNER JOIN {{ touchpoint.EmailAddress() }} e\n    ON e.email_address_key = p.email_address_key\n  INNER JOIN {{ touchpoint.PhoneNumber() }} pn\n    ON pn.phone_number_key = p.phone_number_key\n#+end\n","platform":null}},{"fqn":"/retail/base/touchpoint/postal_address_test","id":"abcd5d85-384b-11ef-8d8b-63ef4c357348","folder_id":"abccc13d-384b-11ef-8d8b-63ef4c357348","name":"postal_address_test","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"\n#+test sql Test_PostalAddress_NoDuplicatesInPK()\n#+begin\n  SELECT  \n    postal_address_key,\n    COUNT(*) AS cnt\n  FROM    \n    {{ PostalAddress() }}\n  GROUP BY\n    postal_address_key\n  HAVING\n    COUNT(*) > 1\n  ;\n#+end","platform":null}},{"fqn":"/retail/landing","id":"abcdd2bf-384b-11ef-8d8b-63ef4c357348","folder_id":"abc98cc4-384b-11ef-8d8b-63ef4c357348","name":"landing","entity_type":"folder","entity_version":"yuejdx2WRvwKW+oWUZvn3t+tBPch+AlttiMAQqrWNc0=","data":{"folder_type":"REGULAR","copied_from_id":null}},{"fqn":"/retail/sources/phone_number_country_code","id":"abcac553-384b-11ef-8d8b-63ef4c357348","folder_id":"abca501e-384b-11ef-8d8b-63ef4c357348","name":"phone_number_country_code","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"\n\n#+src sql PhoneNumberCountryCode()\n#+begin\n  SELECT \n    phone_code,\n    char_length(phone_code) as phone_code_length,\n    country_code_2chars    \n  FROM (VALUES  \n    ('1', 'US'),   -- USA/Canada\n    ('49', 'DE'),  -- Germany\n    ('44', 'GB'),  -- United Kingdoms\n    ('32', 'BE'),  -- Belgium\n    ('41', 'CH'),  -- switz\n    ('353', 'IE'), -- Ireland\n    ('31', 'NL'),  -- Netherlands\n    ('65', 'SG'),  -- Singapore\n    ('60', 'MY'),  -- Malaysia\n    ('81', 'JP')   -- Japan\n  ) AS codes(phone_code, country_code_2chars)  \n#+end\n","platform":null}},{"fqn":"/retail/sources/stores_test","id":"abcb6199-384b-11ef-8d8b-63ef4c357348","folder_id":"abca501e-384b-11ef-8d8b-63ef4c357348","name":"stores_test","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"#+test sql Test_Stores_UniqueID()\n#+meta {\n  :doc `Verifies the uniqueness of the 'store_id' field.`\n}\n#+begin\n  SELECT\n    store_id,\n    COUNT(*) AS cnt\n  FROM\n    {{ Stores() }}\n  GROUP BY\n    store_id\n  HAVING\n    COUNT(*) > 1\n  ;\n#+end\n","platform":null}},{"fqn":"/retail/base/sales","id":"abcd8498-384b-11ef-8d8b-63ef4c357348","folder_id":"abcbafbe-384b-11ef-8d8b-63ef4c357348","name":"sales","entity_type":"folder","entity_version":"yuejdx2WRvwKW+oWUZvn3t+tBPch+AlttiMAQqrWNc0=","data":{"folder_type":"REGULAR","copied_from_id":null}},{"fqn":"/retail/base/sales/sales_detail","id":"abcd8499-384b-11ef-8d8b-63ef4c357348","folder_id":"abcd8498-384b-11ef-8d8b-63ef4c357348","name":"sales_detail","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"#+import \"std/publication\"\n#+import \"coginiti.co/foundation/retail/sources\"\n#+import \"coginiti.co/foundation/retail/base\"\n#+import \"coginiti.co/foundation/retail/base/offering\"\n\n-- TODO: Add sales_type column for sale returns.\n#+src sql SalesDetail()\n#+meta {\n  :doc `Detail level records for a sales transaction. The \"SALES TYPE\" reference tells us whether the line represents a sale or return.`,\n  :publication {\n    :type \"table\",\n    :name \"fact_sales_detail\",\n    :schema \"base\"\n  }\n}\n#+begin\n  SELECT\n    {{ base.SurrogateKey(\"_t.natural_key\") }} AS sales_detail_key,\n    {{ base.SurrogateKey(\"_t.sales_header_nk\") }} AS sales_header_key,\n    sales_line_number,\n    {{ base.SurrogateKey(\"_t.product_nk\") }} AS product_key,\n    unit_quantity,\n    unit_price_amount,\n    b.batch_number\n  FROM (\n    SELECT\n      sales_detail_nk AS natural_key,\n      sales_header_nk,\n      src.line_number AS sales_line_number,\n      src.transaction_datetime,\n      product_nk,\n      src.quantity AS unit_quantity,\n      src.price AS unit_price_amount\n    FROM\n      {{ sources.Sales() }} src\n  ) _t\n  CROSS JOIN {{ base.Batch() }} b\n  ;\n#+end\n","platform":null}},{"fqn":"/retail/base/customer","id":"abcdabac-384b-11ef-8d8b-63ef4c357348","folder_id":"abcbafbe-384b-11ef-8d8b-63ef4c357348","name":"customer","entity_type":"folder","entity_version":"yuejdx2WRvwKW+oWUZvn3t+tBPch+AlttiMAQqrWNc0=","data":{"folder_type":"REGULAR","copied_from_id":null}},{"fqn":"/retail/sources/utils","id":"abcaec65-384b-11ef-8d8b-63ef4c357348","folder_id":"abca501e-384b-11ef-8d8b-63ef4c357348","name":"utils","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"#+macro NaturalKey(prefix, fields)\n#+begin\n  '{{ prefix }}' || #+for f : fields separator \"|| '|' ||\" do COALESCE({{ f }}::TEXT, '') #+end\n#+end\n\n#+macro RowHash(fields)\n#+begin\n  MD5(CONCAT(\n    #+for f : fields separator \", '|',\" do\n      COALESCE({{ f }}::VARCHAR(512), '')\n    #+end\n  ))\n#+end","platform":null}},{"fqn":"/retail/sources/inbound_channels_test","id":"abca9e41-384b-11ef-8d8b-63ef4c357348","folder_id":"abca501e-384b-11ef-8d8b-63ef4c357348","name":"inbound_channels_test","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"#+test sql Test_InboundChannels_UniqueID()\n#+meta {\n  :doc `Verifies the uniqueness of the 'channel_code' field.`\n}\n#+begin\n  SELECT\n    channel_code,\n    COUNT(*) AS cnt\n  FROM\n    {{ InboundChannels() }}\n  GROUP BY\n    channel_code\n  HAVING\n    COUNT(*) > 1\n  ;\n#+end\n","platform":null}},{"fqn":"/retail/_instructions","id":"abce961c-384b-11ef-8d8b-63ef4c357348","folder_id":"abc98cc4-384b-11ef-8d8b-63ef4c357348","name":"_instructions","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"#+import \"coginiti.co/foundation/retail/base\"\n\n--\n-- Instructions\n--\n\n-- Create a database where retail data will be stored, example: \"retail_csl\"\nCREATE DATABASE retail_csl;\n\n-- Create schemas for landing, stage, base and mart data.\n-- This schemas are explicitelly referenced in the CoginitiScript queries. If you decide to change its name, you have to\n-- update scripts which were referencing renamed schemas in the :publication configurations.\nCREATE SCHEMA landing;\nCREATE SCHEMA stage;\nCREATE SCHEMA base;\nCREATE SCHEMA mart;\nCREATE SCHEMA reports;\n\n--\n-- Init base\n-- This will create a sequences for surrogate keys / batches and log table for tracking batches.\n--\n{{ base.Init() }};\n\n--\n-- Open \"run_nightly\" script and run it.\n-- It will execute complete flow:\n-- - populate source tables in the \"landing\" schema\n-- - run pipeline for loading data into the \"base\"\n-- - run tests to verify data consistency in the \"base\"\n-- - run pipeline for publishing mart\n--","platform":null}},{"fqn":"/retail/mart/persona_derived_attributes","id":"abca01f7-384b-11ef-8d8b-63ef4c357348","folder_id":"abc9b3d5-384b-11ef-8d8b-63ef4c357348","name":"persona_derived_attributes","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"#+import \"coginiti.co/foundation/retail/base/customer\"\n#+import \"coginiti.co/foundation/retail/derived_attributes\"\n\n#+src sql PersonaDerivedAttributes()\n#+meta {\n  :doc \"Stores derived attributes for the personas.\",\n  :publication {\n    :type \"table\",\n    :name \"persona_derived_attributes\",\n    :schema \"mart\"\n  }\n}\n#+begin\n  SELECT\n    p.persona_key,\n    rfm_values.first_order,\n    rfm_values.recent_order,\n    rfm_values.total_orders,\n    rfm_values.total_sales,\n    rfm_segments.rfm_recency,\n    rfm_segments.rfm_frequency,\n    rfm_segments.rfm_monetary,\n    rfm_segments.rfm_cell,\n    rfm_segments.rfm_segment\n  FROM\n    {{ customer.Persona() }} p\n  LEFT JOIN {{ derived_attributes.PersonaRFMValues() }} AS rfm_values\n    ON rfm_values.persona_key = p.persona_key\n  LEFT JOIN {{ derived_attributes.PersonaRFMSegments() }} AS rfm_segments\n    ON rfm_segments.persona_key = p.persona_key\n#+end","platform":null}},{"fqn":"/retail/mart/postal_address_dimension","id":"abca501c-384b-11ef-8d8b-63ef4c357348","folder_id":"abc9b3d5-384b-11ef-8d8b-63ef4c357348","name":"postal_address_dimension","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"#+import \"coginiti.co/foundation/retail/base/location\"\n#+import \"coginiti.co/foundation/retail/base/touchpoint\"\n\n#+src sql PostalAddressDimension()\n#+meta {\n  :doc \"This dimension stores a physical postal address. This may be the raw, normalized, or standardized address.\",\n  :publication {\n    :type \"table\",\n    :name \"postal_address_dimension\",\n    :schema \"mart\"\n  }\n}\n#+begin\n  SELECT\n    p.postal_address_key,\n    p.address_line_1,\n    p.address_line_2,\n    p.city_name AS city,\n    pc.postal_code\n  FROM\n    {{ touchpoint.PostalAddress() }} p\n  INNER JOIN {{ touchpoint.PostalCode() }} pc\n    ON pc.postal_code_key = p.postal_code_key\n#+end\n","platform":null}},{"fqn":"/retail/base/touchpoint","id":"abccc13d-384b-11ef-8d8b-63ef4c357348","folder_id":"abcbafbe-384b-11ef-8d8b-63ef4c357348","name":"touchpoint","entity_type":"folder","entity_version":"yuejdx2WRvwKW+oWUZvn3t+tBPch+AlttiMAQqrWNc0=","data":{"folder_type":"REGULAR","copied_from_id":null}},{"fqn":"/retail/base/touchpoint/postal_address","id":"abcd3673-384b-11ef-8d8b-63ef4c357348","folder_id":"abccc13d-384b-11ef-8d8b-63ef4c357348","name":"postal_address","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"#+import \"coginiti.co/foundation/retail/base\"\n#+import \"coginiti.co/foundation/retail/sources\"\n\n-- TODO: Add country_key\n#+src sql PostalAddress()\n#+meta {\n  :doc \"A dimensional type representing a postal address. This may be the raw, normalized, or standardized address.\",\n  :publication {\n    :type \"table\",\n    :name \"dim_postal_address\",\n    :schema \"base\"\n  }\n}\n#+begin\n  WITH source_rows AS (\n    SELECT\n      postal_address_nk AS natural_key,\n      address_line_1,\n      address_line_2,\n      city,\n      postal_code_nk,\n      row_hash\n    FROM\n      {{ sources.Customers() }}\n\n    UNION ALL\n\n    SELECT\n      postal_address_nk AS natural_key,\n      address_line_1,\n      address_line_2,\n      city,\n      postal_code_nk,\n      row_hash\n    FROM\n      {{ sources.Stores() }}\n  )\n\n  SELECT\n    {{ base.SurrogateKey(\"_t.natural_key\") }} AS postal_address_key,\n    _t.address_line_1,\n    _t.address_line_2,\n    {{ base.SurrogateKey(\"_t.postal_code_nk\") }} AS postal_code_key,\n    _t.city AS city_name,\n    -- country_key\n    b.system_timestamp AS start_datetime,\n    b.batch_number AS batch_number\n  FROM (\n    SELECT\n      *,\n      ROW_NUMBER() OVER (PARTITION BY natural_key ORDER BY natural_key DESC, row_hash) AS row_num\n    FROM\n      source_rows  \n  ) _t\n  CROSS JOIN {{ base.Batch() }} b\n  WHERE\n    _t.row_num = 1\n  ;\n#+end\n","platform":null}},{"fqn":"/retail/landing/products","id":"abcdf9d2-384b-11ef-8d8b-63ef4c357348","folder_id":"abcdd2bf-384b-11ef-8d8b-63ef4c357348","name":"products","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"\n#+src sql Products()\n#+meta {\n  :publication {\n    :type \"table\",\n    :name \"products\",\n    :schema \"landing\"\n  }\n}\n#+begin\n  WITH products AS (\n    SELECT\n      ROW_NUMBER() OVER() AS id,\n      'Product ' || ROW_NUMBER() OVER() AS name,\n      (random() * (SELECT COUNT(*) - 1 FROM {{ categories() }}))::int + 1 AS category_id\n    FROM\n      {{ Series(numProducts) }} AS s\n  )\n\n  SELECT\n    p.id,\n    p.name,\n    c.category_code,\n    c.category_name\n  FROM\n    products p\n  INNER JOIN {{ categories() }} c\n    ON c.category_id = p.category_id\n#+end\n\n#+src sql categories()\n#+begin\n  SELECT\n    ROW_NUMBER() OVER() AS category_id,\n    category_code,\n    category_name\n  FROM (\n    SELECT 'ELE' AS category_code, 'Electronics' AS category_name\n    UNION ALL\n    SELECT 'GRO', 'Grocery'\n    UNION ALL\n    SELECT 'BOO', 'Books'\n    UNION ALL \n    SELECT 'TOL', 'Tools'\n    UNION ALL\n    SELECT 'TOY', 'Toys'\n    UNION ALL\n    SELECT 'GAR', 'Garden'\n    UNION ALL\n    SELECT 'SPO', 'Sport'  \n  ) categories;\n#+end\n","platform":null}},{"fqn":"/retail/base/offering","id":"abcc9a2a-384b-11ef-8d8b-63ef4c357348","folder_id":"abcbafbe-384b-11ef-8d8b-63ef4c357348","name":"offering","entity_type":"folder","entity_version":"yuejdx2WRvwKW+oWUZvn3t+tBPch+AlttiMAQqrWNc0=","data":{"folder_type":"REGULAR","copied_from_id":null}},{"fqn":"/retail/run_full_refresh","id":"abcb88ac-384b-11ef-8d8b-63ef4c357348","folder_id":"abc98cc4-384b-11ef-8d8b-63ef4c357348","name":"run_full_refresh","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"#+import \"std/publication\"\n#+import \"std/test\"\n#+import \"coginiti.co/foundation/retail/landing\"\n#+import \"coginiti.co/foundation/retail/sources\"\n#+import \"coginiti.co/foundation/retail/base\"\n#+import \"coginiti.co/foundation/retail/base/location\"\n#+import \"coginiti.co/foundation/retail/base/touchpoint\"\n#+import \"coginiti.co/foundation/retail/base/customer\"\n#+import \"coginiti.co/foundation/retail/base/offering\"\n#+import \"coginiti.co/foundation/retail/base/datetime\"\n#+import \"coginiti.co/foundation/retail/base/sales\"\n#+import \"coginiti.co/foundation/retail/mart\"\n\n-- seed landing\n{{ publication.Run(packages=[landing]) }};\n\n-- run tests to verfiy source data\n{{ test.Run(\n  packages=[sources]\n) }};\n\n-- load base\n{{ publication.Run(\n  packages=[location, touchpoint, customer, offering, datetime, sales],\n  blocks=[base.Batch],\n  fullRefresh=true\n) }};\n\n{{ base.EndBatch() }};\n\n-- run tests to verfiy base consistency\n{{ test.Run(\n  packages=[location, touchpoint, customer, offering, datetime, sales]\n) }};\n\n-- publish mart in another batch\n{{ publication.Run(packages=[mart], fullRefresh=true) }};\n\n","platform":null}},{"fqn":"/retail","id":"abc98cc4-384b-11ef-8d8b-63ef4c357348","folder_id":"bb6de4af-1aad-493e-a9ee-b3e75cf58ed7","name":"retail","entity_type":"folder","entity_version":"yuejdx2WRvwKW+oWUZvn3t+tBPch+AlttiMAQqrWNc0=","data":{"folder_type":"PROJECT","copied_from_id":null}},{"fqn":"/retail/landing/stores","id":"abce20e5-384b-11ef-8d8b-63ef4c357348","folder_id":"abcdd2bf-384b-11ef-8d8b-63ef4c357348","name":"stores","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"/**\nTODO:\n- generate country_code for address which is consistent with store region / area\n- generate phone number with phone code which is consistent with store region / area\n*/\n\n#+src sql Stores()\n#+meta {\n  :publication {\n    :type \"table\",\n    :name \"stores\",\n    :schema \"landing\"\n  }\n}\n#+begin\n  WITH countries AS (\n    SELECT\n      row_number() OVER() AS country_id,\n      country_code_2,\n      country_name,\n      continent_name\n    FROM (\n      SELECT 'US' AS country_code_2, 'USA' AS country_name, 'North America' AS continent_name\n      UNION ALL\n      SELECT 'CA', 'Canada', 'North America'\n      UNION ALL\n      SELECT 'GB', 'United Kingdom', 'Europe'\n      UNION ALL\n      SELECT 'FR', 'France', 'Europe'\n      UNION ALL\n      SELECT 'DE', 'Germany', 'Europe'\n      UNION ALL\n      SELECT 'ES', 'Spain', 'Europe'\n      UNION ALL\n      SELECT 'IT', 'Italy', 'Europe'\n    ) AS countries\n  ),\n  \n  stores AS (\n    SELECT\n      row_number() OVER() seq_number,\n      'ST' || row_number() OVER() AS store_id,\n      'Store ' || row_number() OVER() AS store_name,\n      (random() * (SELECT COUNT(*) - 1 FROM countries))::int + 1 AS country_id,\n      '{{ openDateStart }}'::timestamptz + random() * ('{{ openDateEnd }}'::timestamptz - '{{ openDateStart }}'::timestamptz) AS open_date,\n      (random() * 10000)::int + 100 AS size,\n      (random() * (SELECT COUNT(*) - 1 FROM {{ RegionsHierarchy() }}))::INT + 1 AS region_hierarchy_id\n    FROM\n      {{ Series(numStores) }} s\n  ),\n\n  regions_hierarchy AS (\n    SELECT\n      row_number() OVER() AS id,\n      *\n    FROM\n      {{ RegionsHierarchy() }}\n  ),\n\n  phone_numbers AS (\n    SELECT\n      ROW_NUMBER() OVER() AS seq_number,\n      *\n    FROM\n      {{ MobilePhoneNumbers(numStores) }}\n  )\n\n  SELECT\n    s.store_id,\n    s.store_name,\n    c.country_code_2,\n    c.continent_name,\n    s.open_date,\n    CASE\n      WHEN random() < 0.25 THEN\n        -- TODO: check that closing_date should be <= closingDateEnd\n        open_date + interval '1 year' + random() * interval '1 year'\n    END AS closing_date,\n\n    CASE\n      WHEN c.country_code_2 = 'US' THEN 'SF'\n      WHEN c.country_code_2 = 'CA' THEN 'SF'\n      ELSE 'SM'\n    END AS size_unit_of_measure_code,\n\n    (size - (random() * size / 2))::INT AS selling_area_size,\n    size,\n\n    CASE\n      WHEN random() < 0.1 THEN\n        -- TODO: check that last_remodel_date should be <= lastRemodelDateEnd and should not be set if store is closed\n        open_date + interval '1 year' + random() * interval '1 year'\n    END AS last_remodel_date,\n    LOWER(REPLACE(s.store_name, ' ', '_')) || '@rcorp.com' AS email_address,\n    pn.phone_number AS phone_number,\n    \n    rh.market_region_code,\n    rh.market_region,\n    rh.market_area_code,\n    rh.market_area,\n    rh.district_code,\n    rh.district,\n    rh.store_group_code,\n    rh.store_group,\n    concat(\n      substring('abcdefghijklmnopqrstuvwxyz', (random()*26+1)::int, 1), ' ',\n      substring('abcdefghijklmnopqrstuvwxyz', (random()*26+1)::int, 1), ' ',\n      (random()*1000)::int\n    ) AS address_line_1,\n    concat(\n      substring('abcdefghijklmnopqrstuvwxyz', (random()*26+1)::int, 1), ' ',\n      substring('abcdefghijklmnopqrstuvwxyz', (random()*26+1)::int, 1), ' ',\n      (random()*1000)::int\n    ) AS address_line_2,\n    concat(\n      substring('abcdefghijklmnopqrstuvwxyz', (random()*26+1)::int, 1), ' ',\n      substring('abcdefghijklmnopqrstuvwxyz', (random()*26+1)::int, 1)\n    ) AS city,\n    (random()*90000+10000)::CHAR(5) AS postal_code,\n    'STR' AS inbound_channel_code\n  FROM\n    stores s\n  INNER JOIN countries c\n    ON c.country_id = s.country_id\n  INNER JOIN regions_hierarchy rh\n    ON rh.id = s.region_hierarchy_id\n  INNER JOIN phone_numbers pn\n    ON pn.seq_number = s.seq_number\n#+end\n\n#+src sql RegionsHierarchy()\n#+begin\n  SELECT\n    *    \n  FROM (\n    SELECT 'NA' AS market_region_code, 'North America' AS market_region, 'NE' AS market_area_code, 'Northeast' AS market_area, 'NE' AS district_code, 'New England' AS district, 'US' AS store_group_code, 'Urban Stores' AS store_group\n    UNION ALL\n    SELECT 'NA', 'North America', 'NE', 'Northeast', 'NE', 'New England', 'SS', 'Suburban Stores'\n    UNION ALL\n    SELECT 'NA', 'North America', 'SE', 'Southeast', 'SA', 'South Atlantic', 'RS', 'Rural Stores'\n    UNION ALL\n    SELECT 'NA', 'North America', 'WC', 'West Coast', 'PA', 'Pacific', 'FS', 'Flagship Stores'\n    UNION ALL\n    SELECT 'EU', 'Europe', 'NEU', 'Northern Europe', 'UKI', 'UK & Ireland', 'UKS', 'UK Stores'\n    UNION ALL\n    SELECT 'EU', 'Europe', 'NEU', 'Northern Europe', 'UKI', 'UK & Ireland', 'IRS', 'Ireland Stores'\n    UNION ALL\n    SELECT 'EU', 'Europe', 'WEU', 'Western Europe', 'DACH', 'DACH', 'GES', 'Germany Stores'\n    UNION ALL\n    SELECT 'EU', 'Europe', 'WEU', 'Western Europe', 'DACH', 'DACH', 'SWS', 'Switzerland Stores'\n    UNION ALL\n    SELECT 'EU', 'Europe', 'BNLX', 'Benelux', 'BNLX', 'Benelux', 'BES', 'Belgium Stores'\n    UNION ALL\n    SELECT 'EU', 'Europe', 'BNLX', 'Benelux', 'BNLX', 'Benelux', 'NLS', 'Netherlands Stores'\n    UNION ALL\n    SELECT 'AP', 'Asia Pacific', 'SEA', 'Southeast Asia', 'SNM', 'Singapore & Malaysia', 'SGS', 'Singapore Stores'\n    UNION ALL\n    SELECT 'AP', 'Asia Pacific', 'SEA', 'Southeast Asia', 'SNM', 'Singapore & Malaysia', 'MAS', 'Malaysia Stores'\n    UNION ALL\n    SELECT 'AP', 'Asia Pacific', 'NA', 'North Asia', 'JPN', 'Japan', 'US', 'Urban Stores'\n    UNION ALL\n    SELECT 'AP', 'Asia Pacific', 'NA', 'North Asia', 'JPN', 'Japan', 'SS', 'Suburban Stores'\n  ) AS t;\n#+end\n\n#+src sql MobilePhoneNumbers(n)\n#+meta {\n  :doc \"Generate a random set of phone numbers.\"\n}\n#+begin\n  WITH entries AS (\n    SELECT\n      (random() * (SELECT COUNT(*) - 1 FROM {{ CountryPhoneCodes() }}))::INT + 1 AS sequence_number\n    FROM\n      {{ Series(n) }}\n  )\n\n  SELECT\n    c.phone_number_code || FLOOR(random() * POWER(10, c.phone_number_length))::TEXT AS phone_number\n  FROM\n    entries e\n  INNER JOIN {{ CountryPhoneCodes() }} c\n    ON c.sequence_number = e.sequence_number\n  ;\n#+end\n\n#+src sql PhoneNumberToCountryCode()\n#+begin\n  SELECT\n    p.phone_number,\n    c.iso_2_code\n  FROM\n    {{ MobilePhoneNumbers() }} p\n  LEFT JOIN {{ CountryPhoneCodes() }} c\n    ON LEFT(p.phone_number, LENGTH(c.phone_number_code)) = c.phone_number_code\n  ;\n#+end\n","platform":null}},{"fqn":"/retail/base/touchpoint/email_address","id":"abcd0f62-384b-11ef-8d8b-63ef4c357348","folder_id":"abccc13d-384b-11ef-8d8b-63ef4c357348","name":"email_address","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"#+import \"std/publication\"\n#+import \"coginiti.co/foundation/retail/sources\"\n#+import \"coginiti.co/foundation/retail/base\"\n\n#+src sql EmailAddress()\n#+meta {\n  :doc \"A dimensional type representing an actual email address.\",\n  :publication {\n    :type \"table\",\n    :name \"dim_email_address\",\n    :schema \"base\",\n    :primary_key [\"email_address_key\"]\n  }\n}\n#+begin\n  WITH source_rows AS (\n    SELECT\n      email_address_nk AS natural_key,\n      email AS email_address,\n      email_domain_nk,\n      row_hash\n    FROM\n      {{ sources.Customers() }}\n\n    UNION ALL\n\n    SELECT\n      email_address_nk AS natural_key,\n      email_address,\n      email_domain_nk,\n      row_hash\n    FROM\n      {{ sources.Stores() }}\n  )\n\n  SELECT\n    {{ base.SurrogateKey(\"_t.natural_key\") }} AS email_address_key,\n    _t.email_address,\n    {{ base.SurrogateKey(\"_t.email_domain_nk\") }} AS email_domain_key,\n    b.system_timestamp AS start_datetime,\n    b.batch_number AS batch_number\n  FROM (\n    SELECT\n      *,\n      ROW_NUMBER() OVER (PARTITION BY natural_key ORDER BY natural_key DESC, row_hash) AS row_num\n    FROM\n      source_rows\n  ) _t\n  CROSS JOIN {{ base.Batch() }} b\n  WHERE\n    _t.row_num = 1\n  ;\n#+end\n","platform":null}},{"fqn":"/retail/landing/sales","id":"abce47f8-384b-11ef-8d8b-63ef4c357348","folder_id":"abcdd2bf-384b-11ef-8d8b-63ef4c357348","name":"sales","entity_type":"sql_entity","entity_version":"h5edXc484LXc9ldVCAVDL0X9cJIk7+j68p2ltnsARRs=","data":{"executed_count":0,"executed_at":null,"copied_from_id":null,"asset_type":"CSL","description":"","content":"\n#+src sql Sales()\n#+meta {\n  :publication {\n    :type \"table\",\n    :name \"sales\",\n    :schema \"landing\"\n  }\n}\n#+begin\n  SELECT\n    id,\n    transaction_id,\n    transaction_timestamp,\n    ROW_NUMBER() OVER (PARTITION BY transaction_id) AS line_number,\n    customer_id,\n    store_id,\n    product_id,\n    product_price,\n    quantity\n  FROM (\n    SELECT \n      row_number() OVER() AS id,\n      row_number() OVER() AS transaction_id,\n      '{{ transactionsStartDate }}'::timestamptz + random() * ('{{ transactionsEndDate }}'::timestamptz - '{{ transactionsStartDate }}'::timestamptz) AS transaction_timestamp,\n      (random() * {{ numCustomers }} - 1)::INT + 1 AS customer_id,\n      'ST' || (random() * {{ numStores }} - 1)::INT + 1 AS store_id,\n      product_id,\n      product_price,\n      (random() * 15)::INT + 1 AS quantity\n    FROM (\n      SELECT\n        _tmp.product_id,\n        (random() * 99 + 1)::numeric(18,2) AS product_price\n      FROM (\n        SELECT \n          id AS product_id\n        FROM\n          {{ Series(numProducts) }}\n      ) _tmp\n    ) products\n    CROSS JOIN {{ Series(numSalesTransations) }} ids\n  ) t\n#+end\n\n","platform":null}}]}